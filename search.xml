<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>AWS EC2 執行個體本地部署</title>
    <url>/2021/12/17/AWS-EC2-%E5%9F%B7%E8%A1%8C%E5%80%8B%E9%AB%94%E6%9C%AC%E5%9C%B0%E9%83%A8%E5%B1%AC/</url>
    <content><![CDATA[<h2 id="Aws-EC2-執行個體映像本地部署"><a href="#Aws-EC2-執行個體映像本地部署" class="headerlink" title="Aws EC2  執行個體映像本地部署"></a>Aws EC2  執行個體映像本地部署</h2><blockquote>
<p>應需求將 EC2 映像拉至本地部署.</p>
</blockquote>
<span id="more"></span>
<h3 id="開啟執行個體的帳號密碼登入模式"><a href="#開啟執行個體的帳號密碼登入模式" class="headerlink" title="開啟執行個體的帳號密碼登入模式"></a>開啟執行個體的帳號密碼登入模式</h3><blockquote>
<p>此步驟設置後本地虛擬機進行調試較為方便</p>
</blockquote>
<ol>
<li><p>以root的身份修改 /etc/ssh/sshd_config，找到 PasswordAuthentication no，把no改成yes</p>
</li>
<li><p>重新啟動 ssh :</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart ssh</span><br></pre></td></tr></table></figure></li>
<li><p>設定使用者 ubuntu 登入密碼</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">passwd ubuntu</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="匯出映像檔"><a href="#匯出映像檔" class="headerlink" title="匯出映像檔"></a>匯出映像檔</h3><blockquote>
<p>使用 VM Import/Export 將執行個體匯出為 VM</p>
</blockquote>
<ol>
<li><p>需求工具</p>
<ol>
<li>aws cli</li>
<li>IAM 角色 vmimport</li>
<li>S3 儲存體 (區域需與實例同區域 EX : 實例位於奧勒岡 則 S3儲存體也需位於奧勒岡)</li>
</ol>
</li>
<li><p>匯出指令使用 [ export-image ]</p>
<ol>
<li><p>匯出格式 支援 VMDK | RAW | VHD</p>
</li>
<li><p>匯出指令示例 及說明:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">aws ec2 export-image --image-id &lt;your image id&gt; --disk-image-format RAW --s3-export-location S3Bucket=&lt;your S3Bucket&gt;,S3Prefix=&lt;ypur file path&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>image-id : 映像檔案ID</li>
<li>disk-image-format : 匯出格式</li>
<li>S3Bucket : 匯出檔案目標儲存體</li>
<li>S3Prefix : 匯出檔案目標儲存體資料夾</li>
</ul>
</li>
<li><p>匯出檔案結果示例及說明 :</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;DiskImageFormat&quot;</span>: <span class="string">&quot;RAW&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;ExportImageTaskId&quot;</span>: <span class="string">&quot;export-ami&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;ImageId&quot;</span>: <span class="string">&quot;your image id&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Progress&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;S3ExportLocation&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;S3Bucket&quot;</span>: <span class="string">&quot;your S3Bucket&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;S3Prefix&quot;</span>: <span class="string">&quot;ypur file path&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;Status&quot;</span>: <span class="string">&quot;active&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;StatusMessage&quot;</span>: <span class="string">&quot;validating&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>DiskImageFormat : 匯出檔案格式</li>
<li>ExportImageTaskId : 匯出任務 ID,用於查看當前任務進度</li>
<li>ImageId : 映像檔ID</li>
<li>Progress :當前匯出進度</li>
<li>S3ExportLocation : S3儲存體資訊</li>
<li>Status : 狀態</li>
<li>StatusMessage : 狀態訊息</li>
</ul>
</li>
<li><p>匯出檔案進度追蹤示例及說明 :</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;ExportImageTasks&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;ExportImageTaskId&quot;</span>: <span class="string">&quot;export-ami&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;Progress&quot;</span>: <span class="string">&quot;85&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;S3ExportLocation&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;S3Bucket&quot;</span>: <span class="string">&quot;your S3Bucket&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;S3Prefix&quot;</span>: <span class="string">&quot;ypur file path&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">&quot;Status&quot;</span>: <span class="string">&quot;active&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;StatusMessage&quot;</span>: <span class="string">&quot;converting&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;Tags&quot;</span>: []</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>ExportImageTaskId : 匯出任務ID</li>
<li>Progress :當前進度</li>
<li>S3ExportLocation : S3儲存體資訊</li>
<li>Status : 狀態</li>
<li>StatusMessage  : 狀態訊息</li>
</ul>
</li>
<li><p>匯出檔案進度追蹤示例及說明</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;ExportImageTasks&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;ExportImageTaskId&quot;</span>: <span class="string">&quot;export-ami&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;S3ExportLocation&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;S3Bucket&quot;</span>: <span class="string">&quot;your S3Bucket&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;S3Prefix&quot;</span>: <span class="string">&quot;ypur file path&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">&quot;Status&quot;</span>: <span class="string">&quot;completed&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;Tags&quot;</span>: []</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>Status 由 active 轉為 completed</li>
</ul>
</li>
</ol>
</li>
</ol>
<h3 id="VM部屬支援格示轉換"><a href="#VM部屬支援格示轉換" class="headerlink" title="VM部屬支援格示轉換"></a>VM部屬支援格示轉換</h3><blockquote>
<p>將儲存至 S3Bucket 的映像檔下載至本地,並轉換為虛擬機支援的格式</p>
</blockquote>
<ol>
<li><p>需求工具</p>
<ul>
<li>qemu-img</li>
</ul>
</li>
<li><p>支援格式</p>
<ul>
<li>raw, qcow2, qed, vdi, vmdk, vhd </li>
</ul>
</li>
<li><p>qemu-img 格式</p>
<table>
<thead>
<tr>
<th>Image format</th>
<th>Argument to qemu-img</th>
</tr>
</thead>
<tbody><tr>
<td>QCOW2 (KVM, Xen)</td>
<td>qcow2</td>
</tr>
<tr>
<td>QED (KVM)</td>
<td>qed</td>
</tr>
<tr>
<td>RAW</td>
<td>raw</td>
</tr>
<tr>
<td>VDI (VirtualBox)</td>
<td>vdi</td>
</tr>
<tr>
<td>VHD (Hyper-V)</td>
<td>vpc</td>
</tr>
<tr>
<td>VMDK (VMware)</td>
<td>vmdk</td>
</tr>
</tbody></table>
</li>
<li><p>qemu-img 指令示例及說明</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">qemu-img convert -f vpc -O qcow2 .\export-ami.vhd .\export-ami.qcow2</span><br></pre></td></tr></table></figure>

<ul>
<li> -f  : 原始檔案格式</li>
<li> -O : 輸出檔案格式</li>
</ul>
</li>
</ol>
<h3 id="設置虛擬機網路"><a href="#設置虛擬機網路" class="headerlink" title="設置虛擬機網路"></a>設置虛擬機網路</h3><blockquote>
<p>以映像檔啟用後虛擬機騎網路設置依然為 AWS 上之設置,這邊需要進行修改以適配本地網路環境</p>
</blockquote>
<ul>
<li><p>使用 <code>netplay</code> 修改網路設定</p>
<ul>
<li> Ubuntu 18.04 版本下已修改了 IP 地址設定方式 , 不再使用 <code>ifup/ifdown</code> 命令和 <code>/etc/network/interfaces</code>配置文件，改為使用<code>/etc/netplan/01-netcfg.yaml</code>和<code>sudo netplay apply</code>命令管理 IP 地址.</li>
</ul>
</li>
<li><p>修改 /etc/netplan/01-netcfg.yaml</p>
<ul>
<li><p>設置為 DHCP </p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">network:</span></span><br><span class="line">    <span class="attr">version:</span> <span class="number">2</span></span><br><span class="line">    <span class="attr">renderer:</span> <span class="string">networkd</span></span><br><span class="line">    <span class="attr">ethernets:</span></span><br><span class="line">    <span class="comment"># enp3s0 為網路接口</span></span><br><span class="line">        <span class="attr">enp3s0:</span></span><br><span class="line">        <span class="comment"># 啟用 DHCP</span></span><br><span class="line">            <span class="attr">dhcp4:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li>
<li><p>設置為靜態 IP</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 假設設定的固定 IP 為 192.168.10.110 ,閘道為 192.168.10.1 ,DNS 套用閘道的設定.</span></span><br><span class="line"><span class="attr">network:</span></span><br><span class="line">    <span class="attr">version:</span> <span class="number">2</span></span><br><span class="line">    <span class="attr">ethernets:</span></span><br><span class="line">        <span class="attr">enp3s0:</span></span><br><span class="line">            <span class="attr">addresses:</span></span><br><span class="line">                <span class="bullet">-</span> <span class="number">192.168</span><span class="number">.10</span><span class="number">.110</span><span class="string">/24</span></span><br><span class="line">            <span class="attr">gateway4:</span> <span class="number">192.168</span><span class="number">.10</span><span class="number">.1</span></span><br><span class="line">            <span class="attr">nameservers:</span></span><br><span class="line">                <span class="attr">addresses:</span> </span><br><span class="line">                <span class="bullet">-</span> <span class="number">192.168</span><span class="number">.10</span><span class="number">.1</span></span><br></pre></td></tr></table></figure></li>
<li><p>注意要點</p>
<ul>
<li>每行的前綴空格數很重要.若錯誤則可能會得到類似於以下內容的錯誤消息 : Invalid YAML at //etc/netplan/01-netcfg.yaml line 7 column 6: did not find expected key </li>
</ul>
</li>
<li><p>測試設定</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo netplan try</span><br></pre></td></tr></table></figure>

<blockquote>
<p>如果設定錯誤的話就會斷線,但若倒數 120 秒後如果沒有按下 Enter,做最後的確認動作,系統就會恢復套用前的網路設定.</p>
</blockquote>
</li>
<li><p>除錯</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo netplan --debug apply</span><br></pre></td></tr></table></figure></li>
<li><p>應用更改</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo netplan apply</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>詳細可參考以下網址進行網路設定</p>
<ul>
<li><a href="https://netplan.io/examples/">https://netplan.io/examples/</a></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>AWS</category>
      </categories>
      <tags>
        <tag>EC2</tag>
      </tags>
  </entry>
  <entry>
    <title>AWS  ECR ( Elastic Container Registry ) 使用</title>
    <url>/2021/12/16/AWS-ECR-Elastic-Container-Registry-%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="AWS-ECR-Elastic-Container-Registry-使用"><a href="#AWS-ECR-Elastic-Container-Registry-使用" class="headerlink" title="AWS  ECR ( Elastic Container Registry ) 使用"></a>AWS  ECR ( Elastic Container Registry ) 使用</h2><blockquote>
<p>Amazon Elastic Container Registry (ECR) 是一個全受管Docker 容器登錄檔，可隨時隨地輕鬆存放、共享及部署容器映像。</p>
</blockquote>
<span id="more"></span>
<h3 id="IAM角色權限賦予"><a href="#IAM角色權限賦予" class="headerlink" title="IAM角色權限賦予"></a>IAM角色權限賦予</h3><ul>
<li>操作前須將 IAM 角色賦予 ECR 相關權限</li>
</ul>
<h3 id="安裝-AWS-Command-Line-Interface-AWS-CLI"><a href="#安裝-AWS-Command-Line-Interface-AWS-CLI" class="headerlink" title="安裝 AWS Command Line Interface (AWS CLI)"></a>安裝 AWS Command Line Interface (AWS CLI)</h3><ul>
<li>安裝環境 : Linux x86 (64-bit)</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下載最新安裝檔案</span></span><br><span class="line">curl <span class="string">&quot;https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip&quot;</span> -o <span class="string">&quot;awscliv2.zip&quot;</span></span><br><span class="line"><span class="comment"># 解壓縮</span></span><br><span class="line">unzip awscliv2.zip</span><br><span class="line"><span class="comment"># 安裝</span></span><br><span class="line">sudo ./aws/install</span><br><span class="line"><span class="comment"># 顯示版本資訊</span></span><br><span class="line">aws --version</span><br></pre></td></tr></table></figure>

<h3 id="登入資訊設定"><a href="#登入資訊設定" class="headerlink" title="登入資訊設定"></a>登入資訊設定</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 設定 AWS CLI</span></span><br><span class="line">aws configure</span><br><span class="line"></span><br><span class="line"><span class="comment"># 填入資訊</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 存取金鑰 ID</span></span><br><span class="line">AWS Access Key ID [None]: </span><br><span class="line"><span class="comment"># 私密存取金鑰</span></span><br><span class="line">AWS Secret Access Key [None]: </span><br><span class="line"><span class="comment"># AWS 區域</span></span><br><span class="line">Default region name [None]: </span><br><span class="line"><span class="comment"># 輸出格式</span></span><br><span class="line">Default output format [None]: </span><br></pre></td></tr></table></figure>

<h3 id="取得docker登入資訊"><a href="#取得docker登入資訊" class="headerlink" title="取得docker登入資訊"></a>取得docker登入資訊</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 用於 AWS CLI v2</span></span><br><span class="line">aws ecr get-login-password</span><br><span class="line"></span><br><span class="line"><span class="comment">#info : 利用取得登入資訊若報錯可執行以下命令安裝元件</span></span><br><span class="line">sudo apt install gnupg2 pass</span><br></pre></td></tr></table></figure>

<h3 id="建立儲存庫"><a href="#建立儲存庫" class="headerlink" title="建立儲存庫"></a>建立儲存庫</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">aws ecr create-repository --repository-name &lt;your repository-name&gt;</span><br></pre></td></tr></table></figure>

<h3 id="更換-欲上傳之-Docker-Image-Tag"><a href="#更換-欲上傳之-Docker-Image-Tag" class="headerlink" title="更換 欲上傳之 Docker  Image  Tag"></a>更換 欲上傳之 Docker  Image  Tag</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker tag &lt;<span class="built_in">local</span> image&gt; &lt;aws_account_id&gt;.dkr.ecr.&lt;region&gt;.amazonaws.com/&lt;repository_name&gt;:&lt;tag_name&gt;</span><br></pre></td></tr></table></figure>

<h3 id="上傳-Image"><a href="#上傳-Image" class="headerlink" title="上傳  Image"></a>上傳  Image</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker push &lt;aws_account_id&gt;.dkr.ecr.&lt;region&gt;.amazonaws.com/&lt;repository_name&gt;:&lt;tag_name&gt;</span><br></pre></td></tr></table></figure>

<h3 id="拉取-image"><a href="#拉取-image" class="headerlink" title="拉取 image"></a>拉取 image</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull &lt;aws_account_id&gt;.dkr.ecr.&lt;region&gt;.amazonaws.com/&lt;repository_name&gt;:&lt;tag_name&gt;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>AWS</category>
      </categories>
      <tags>
        <tag>ECR</tag>
      </tags>
  </entry>
  <entry>
    <title>Cloudflare快取清除</title>
    <url>/2021/12/15/Cloudflare%E5%BF%AB%E5%8F%96%E6%B8%85%E9%99%A4/</url>
    <content><![CDATA[<h2 id="Cloudflare快取清除"><a href="#Cloudflare快取清除" class="headerlink" title="Cloudflare快取清除"></a>Cloudflare快取清除</h2><blockquote>
<p>通過使用 Cloudflare api 進行快取清除</p>
</blockquote>
<span id="more"></span>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">E_mail=<span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">Zone_ID=<span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">Global_API_Key=<span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">curl -X POST <span class="string">&quot;https://api.cloudflare.com/client/v4/zones/<span class="variable">$Zone_ID</span>/purge_cache&quot;</span> \</span><br><span class="line">     -H <span class="string">&quot;X-Auth-Email: <span class="variable">$E_mail</span>&quot;</span> \</span><br><span class="line">     -H <span class="string">&quot;X-Auth-Key: <span class="variable">$Global_API_Key</span>&quot;</span> \</span><br><span class="line">     -H <span class="string">&quot;Content-Type: application/json&quot;</span> \</span><br><span class="line">     --data <span class="string">&#x27;&#123;&quot;purge_everything&quot;:true&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;CloudFlare cache has been cleared&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> -s -n1 -p <span class="string">&quot;按任意按鍵結束...&quot;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>cloudflare</category>
      </categories>
      <tags>
        <tag>cloudflare</tag>
      </tags>
  </entry>
  <entry>
    <title>GitLab-CE 異地遷移與升級</title>
    <url>/2021/12/15/GitLab-CE-%E7%95%B0%E5%9C%B0%E9%81%B7%E7%A7%BB%E8%88%87%E5%8D%87%E7%B4%9A/</url>
    <content><![CDATA[<h1 id="GitLab-CE-異地遷移與升級"><a href="#GitLab-CE-異地遷移與升級" class="headerlink" title="GitLab-CE 異地遷移與升級"></a>GitLab-CE 異地遷移與升級</h1><h2 id="軟體需求"><a href="#軟體需求" class="headerlink" title="軟體需求"></a>軟體需求</h2><ol>
<li><p>docker </p>
</li>
<li><p>docker-ce</p>
<ol>
<li>GitLab原始版本11.11.8</li>
<li>postgresql 版本 10.7</li>
</ol>
</li>
<li><p>docker-portainer</p>
<span id="more"></span>
<h2 id="遷移步驟"><a href="#遷移步驟" class="headerlink" title="遷移步驟"></a>遷移步驟</h2></li>
<li><p>再遷移目標安裝 Docker</p>
</li>
<li><p>Docker 拉取相應版本 GitLab 版本</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">docker</span> <span class="string">pull</span> <span class="string">gitlab/gitlab-ce:11.11.8-ce.0</span></span><br></pre></td></tr></table></figure>

<p>備註:需與原始備份GitLab版本相同</p>
</li>
<li><p>運行容器</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">docker</span> <span class="string">run</span> <span class="string">--detach</span> <span class="string">\</span></span><br><span class="line">           <span class="string">--hostname</span> <span class="string">gitlab.xxx.com</span> <span class="string">\</span></span><br><span class="line">           <span class="string">--publish</span> <span class="number">443</span><span class="string">:443</span> <span class="string">--publish</span> <span class="number">80</span><span class="string">:80</span> <span class="string">--publish</span> <span class="number">1024</span><span class="string">:1024</span> <span class="string">\</span></span><br><span class="line">           <span class="string">--name</span> <span class="string">gitlab</span> <span class="string">\</span></span><br><span class="line">           <span class="string">--restart</span> <span class="string">always</span> <span class="string">\</span></span><br><span class="line">           <span class="string">--volume</span> &#123;<span class="string">localhost</span> <span class="string">path</span>&#125;<span class="string">/config:/etc/gitlab</span> <span class="string">\</span></span><br><span class="line">           <span class="string">--volume</span> &#123;<span class="string">localhost</span> <span class="string">path</span>&#125;<span class="string">/logs:/var/log/gitlab</span> <span class="string">\</span></span><br><span class="line">           <span class="string">--volume</span> &#123;<span class="string">localhost</span> <span class="string">path</span>&#125;<span class="string">/data:/var/opt/gitlab</span> <span class="string">\</span></span><br><span class="line">           <span class="string">gitlab/gitlab-ce:11.11.8-ce.0</span></span><br></pre></td></tr></table></figure></li>
<li><p>複製備份文件至 backups 目錄</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#停止容器</span></span><br><span class="line"><span class="string">docker</span> <span class="string">stop</span> <span class="string">gitlab</span></span><br><span class="line"><span class="comment">#搬移檔案</span></span><br><span class="line"><span class="string">cp</span> <span class="string">1548648399_2019_01_28_11.0.1_gitlab_backup.tar</span> <span class="string">/srv/gitlab/data/backups/</span></span><br><span class="line"><span class="comment">#啟動容器</span></span><br><span class="line"><span class="string">docker</span> <span class="string">start</span> <span class="string">gitlab</span></span><br></pre></td></tr></table></figure></li>
<li><p>進入容器操作</p>
<ol>
<li><p>使用 docker-portainer 進入容器</p>
</li>
<li><p>恢復數據</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#停止服務</span></span><br><span class="line"><span class="string">gitlab-ctl</span> <span class="string">stop</span> <span class="string">unicorn</span></span><br><span class="line"><span class="string">gitlab-ctl</span> <span class="string">stop</span> <span class="string">sidekiq</span></span><br><span class="line"><span class="comment">#檢查狀態</span></span><br><span class="line"><span class="string">gitlab-ctl</span> <span class="string">status</span></span><br><span class="line"><span class="comment">#恢復備份</span></span><br><span class="line"><span class="string">gitlab-rake</span> <span class="string">gitlab:backup:restore</span> <span class="string">BACKUP=1548648399_2019_01_28_11.0.1</span></span><br><span class="line"><span class="comment">#重啟GitLab</span></span><br><span class="line"><span class="string">gitlab-ctl</span> <span class="string">restart</span></span><br><span class="line"><span class="comment">#驗證GitLab</span></span><br><span class="line"><span class="string">gitlab-rake</span> <span class="string">gitlab:check</span> <span class="string">SANITIZE=true</span></span><br></pre></td></tr></table></figure></li>
<li><p>完成備份恢復</p>
</li>
</ol>
</li>
<li><p>升級 postgresql 版本</p>
<ol>
<li><p>GitLab原始版本11.11.8 本身自帶版本為 9.6</p>
</li>
<li><p>因原始數據串接外部 postgresql 版本為 10 需手動升級 postgresql 版本</p>
</li>
<li><p>使用 docker-portainer 進入容器</p>
</li>
<li><p>昇級 postgresql 版本</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#升級postgresql</span></span><br><span class="line"><span class="string">gitlab-ctl</span> <span class="string">pg-upgrade</span> <span class="number">10</span></span><br><span class="line"><span class="comment">#重啟GitLab</span></span><br><span class="line"><span class="string">gitlab-ctl</span> <span class="string">restart</span></span><br></pre></td></tr></table></figure></li>
<li><p>完成所有遷移</p>
</li>
</ol>
</li>
</ol>
<h2 id="版本升級步驟"><a href="#版本升級步驟" class="headerlink" title="版本升級步驟"></a>版本升級步驟</h2><ol>
<li><p>使用Docker 版本升級方法</p>
</li>
<li><p>確認版本升級次序,其中有必要升級版詳細參照</p>
</li>
</ol>
<ol start="3">
<li><p>進行版本升級</p>
<ol>
<li><p>進行備份</p>
</li>
<li><p>停止進行中的容器</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#停止容器 gitlab</span></span><br><span class="line"><span class="string">docker</span> <span class="string">stop</span> <span class="string">gitlab</span></span><br></pre></td></tr></table></figure></li>
<li><p>刪除現有容器</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#刪除容器 gitlab</span></span><br><span class="line"><span class="string">docker</span> <span class="string">rm</span> <span class="string">gitlab</span></span><br></pre></td></tr></table></figure></li>
<li><p>拉取升級目標版本</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#本地版本為 11.11.8</span></span><br><span class="line"><span class="comment">#遵循官方文件升級必要版本 拉取 img 版本 12.0.12-ce.0</span></span><br><span class="line"><span class="string">docker</span> <span class="string">pull</span> <span class="string">gitlab/gitlab-ce:12.0.12-ce.0</span></span><br></pre></td></tr></table></figure></li>
<li><p>同樣參數啟動容器</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">docker</span> <span class="string">run</span> <span class="string">--detach</span> <span class="string">\</span></span><br><span class="line">           <span class="string">--hostname</span> <span class="string">gitlab.xxx.com</span> <span class="string">\</span></span><br><span class="line">           <span class="string">--publish</span> <span class="number">443</span><span class="string">:443</span> <span class="string">--publish</span> <span class="number">80</span><span class="string">:80</span> <span class="string">--publish</span> <span class="number">1024</span><span class="string">:1024</span> <span class="string">\</span></span><br><span class="line">           <span class="string">--name</span> <span class="string">gitlab</span> <span class="string">\</span></span><br><span class="line">           <span class="string">--restart</span> <span class="string">always</span> <span class="string">\</span></span><br><span class="line">           <span class="string">--volume</span> <span class="string">/srv/gitlab/config:/etc/gitlab</span> <span class="string">\</span></span><br><span class="line">           <span class="string">--volume</span> <span class="string">/srv/gitlab/logs:/var/log/gitlab</span> <span class="string">\</span></span><br><span class="line">           <span class="string">--volume</span> <span class="string">/srv/gitlab/data:/var/opt/gitlab</span> <span class="string">\</span></span><br><span class="line">           <span class="string">gitlab/gitlab-ce:12.0.12-ce.0</span></span><br></pre></td></tr></table></figure></li>
<li><p>在第一次運行時GitLab將重新配置並自我更新</p>
</li>
<li><p>完成版本升級</p>
</li>
</ol>
</li>
</ol>
]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>GitLab-CE</tag>
      </tags>
  </entry>
  <entry>
    <title>Golang 套件筆記 godotenv</title>
    <url>/2021/12/27/Golang-%E5%A5%97%E4%BB%B6%E7%AD%86%E8%A8%98-godotenv/</url>
    <content><![CDATA[<h2 id="Golang-套件筆記"><a href="#Golang-套件筆記" class="headerlink" title="Golang 套件筆記"></a>Golang 套件筆記</h2><h3 id="環境變數套件-godotenv"><a href="#環境變數套件-godotenv" class="headerlink" title="環境變數套件 godotenv"></a>環境變數套件 godotenv</h3><blockquote>
<p><a href="https://github.com/joho/godotenv">godotenv</a>從<code>.env</code>文件中讀取配置,然後存儲到程序的環境變量中</p>
</blockquote>
<span id="more"></span>
<h3 id="安裝方法"><a href="#安裝方法" class="headerlink" title="安裝方法"></a>安裝方法</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">go get github.com/joho/godotenv</span><br></pre></td></tr></table></figure>

<h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><ul>
<li><p>在專案跟目錄中新增<code>.env</code>檔案</p>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">S3<span class="built_in">_</span>BUCKET=YOURS3BUCKET</span><br><span class="line">SECRET<span class="built_in">_</span>KEY=YOURSECRETKEYGOESHERE</span><br></pre></td></tr></table></figure></li>
<li><p>在 GO 應用中使用手動加載</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;github.com/joho/godotenv&quot;</span></span><br><span class="line">    <span class="string">&quot;log&quot;</span></span><br><span class="line">    <span class="string">&quot;os&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  <span class="comment">//讀取 env 文件並將文件參數加入環境變數</span></span><br><span class="line">  err := godotenv.Load()</span><br><span class="line">  <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    log.Fatal(<span class="string">&quot;Error loading .env file&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//使用 os.Getenv 取得環境變數值</span></span><br><span class="line">  s3Bucket := os.Getenv(<span class="string">&quot;S3_BUCKET&quot;</span>)</span><br><span class="line">  secretKey := os.Getenv(<span class="string">&quot;SECRET_KEY&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>在 GO 應用中使用自動加載</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    _ <span class="string">&quot;github.com/joho/godotenv&quot;</span></span><br><span class="line">    <span class="string">&quot;log&quot;</span></span><br><span class="line">    <span class="string">&quot;os&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  <span class="comment">//使用空導入,亦即在包名前加上&quot;_&quot;後會自動加載</span></span><br><span class="line">  <span class="comment">//直接使用 os.Getenv 取得環境變數值</span></span><br><span class="line">  s3Bucket := os.Getenv(<span class="string">&quot;S3_BUCKET&quot;</span>)</span><br><span class="line">  secretKey := os.Getenv(<span class="string">&quot;SECRET_KEY&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>不存入環境變量</p>
<blockquote>
<p><code>godotenv</code>允許不將<code>.env</code>文件內容加入環境變量,使用<code>godotenv.Read()</code>返回一個<code>map[string]string</code>,可直接使用</p>
</blockquote>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">  <span class="string">&quot;fmt&quot;</span></span><br><span class="line">  <span class="string">&quot;log&quot;</span></span><br><span class="line">  <span class="string">&quot;github.com/joho/godotenv&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  <span class="keyword">var</span> myEnv <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span></span><br><span class="line">  <span class="comment">// godotenv.Read()</span></span><br><span class="line">  myEnv, err := godotenv.Read()</span><br><span class="line">  <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    log.Fatal(err)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// use </span></span><br><span class="line">  fmt.Println(<span class="string">&quot;S3_BUCKET: &quot;</span>, myEnv[<span class="string">&quot;S3_BUCKET&quot;</span>])</span><br><span class="line">  fmt.Println(<span class="string">&quot;SECRET_KEY: &quot;</span>, myEnv[<span class="string">&quot;SECRET_KEY&quot;</span>])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>GO</category>
      </categories>
      <tags>
        <tag>GO</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernetes 1.23 升級 1.24 節點錯誤及解決方法</title>
    <url>/2022/11/20/Kubernetes-1-23-%E5%8D%87%E7%B4%9A-1-24-%E7%AF%80%E9%BB%9E%E9%8C%AF%E8%AA%A4%E5%8F%8A%E8%A7%A3%E6%B1%BA%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h3 id="Kubernetes-1-23-升級-1-24-節點錯誤及解決方法"><a href="#Kubernetes-1-23-升級-1-24-節點錯誤及解決方法" class="headerlink" title="Kubernetes 1.23 升級 1.24 節點錯誤及解決方法"></a>Kubernetes 1.23 升級 1.24 節點錯誤及解決方法</h3><blockquote>
<p>使用 kubeadm 將 Master 節點由 1.23.14 版本升級至 1.24.8 版本</p>
</blockquote>
<h4 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h4><p>        參照 <a href="https://v1-24.docs.kubernetes.io/zh-cn/docs/tasks/administer-cluster/kubeadm/kubeadm-upgrade/">官方文件</a> 對 Master 節點進行 1.23 至 1.24 升級 , 完成後節點無法正常運作 , Master 節點顯示 Not Ready.</p>
<span id="more"></span>
<h4 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h4><p>         原節點建構時 Container Runtime 皆是使用 Docker Engine 來進行驅動 , 但1.24 版本開始 Dockershim 已從 Kubernetes 項目中移除 , 此 Master 節點未先行改用其他符合 CRI (Container Runtime Interface) 標準的 Container Runtime , 因此在升級完成後呈現  Not Ready.</p>
<h4 id="解決過程"><a href="#解決過程" class="headerlink" title="解決過程"></a>解決過程</h4><ul>
<li>參照 <a href="https://serverfault.com/questions/1104591/error-failed-to-parse-kubelet-flag-unknown-flag-network-plugin">鏈結</a> 中的方法 , 先進行以下指令</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">kubeadm init phase kubelet<span class="literal">-start</span>     </span><br></pre></td></tr></table></figure>

<p>        利用此指令重新生成正確的 kubeadm-flags.env</p>
<ul>
<li>再使用以下指令確認狀態</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">kubeadm init phase preflight </span><br></pre></td></tr></table></figure>

<p>       此指令會檢查  kuber-apisever 、kuber-controller-manager、kuber-scheduler、etcd 四個 yaml 文件以及 Container Runtime , 在此步驟發現 Container Runtime 未運行.</p>
<ul>
<li>參照 <a href="https://serverfault.com/questions/1104591/error-failed-to-parse-kubelet-flag-unknown-flag-network-plugin">鏈結</a> 中的方法 , 進行以下指令</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">containerd config default &gt; /etc/containerd/config.toml</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">runtime-endpoint: unix:///run/containerd/containerd.sock</span></span><br><span class="line"><span class="string">image-endpoint: unix:///run/containerd/containerd.sock</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span> &gt; /etc/crictl.yaml</span><br><span class="line">systemctl restart containerd</span><br></pre></td></tr></table></figure>

<p>        此指令用意是使用 containerd 作為 Container Runtime , 至此 Container Runtime 恢復正常並呈現運行中.</p>
<h4 id="檢查節點狀態"><a href="#檢查節點狀態" class="headerlink" title="檢查節點狀態"></a>檢查節點狀態</h4><p>        使用以下指令</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">kubectl get nodes <span class="literal">-o</span> wide</span><br></pre></td></tr></table></figure>

<p>        輸出結果示例</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">NAME             STATUS   ROLES           AGE    VERSION    INTERNAL<span class="literal">-IP</span>     EXTERNAL<span class="literal">-IP</span>   OS<span class="literal">-IMAGE</span>             KERNEL<span class="literal">-VERSION</span>      CONTAINER<span class="literal">-RUNTIME</span></span><br><span class="line">cluster<span class="literal">-node01</span>   Ready    control<span class="literal">-plane</span>   <span class="number">367</span>d   v1.<span class="number">24.8</span>    <span class="number">192.168</span>.<span class="number">50.63</span>   &lt;none&gt;        Ubuntu <span class="number">20.04</span>.<span class="number">3</span> LTS   <span class="number">5.4</span>.<span class="number">0</span><span class="literal">-132</span><span class="literal">-generic</span>   containerd://<span class="number">1.4</span>.<span class="number">11</span></span><br><span class="line">cluster<span class="literal">-node02</span>   Ready    &lt;none&gt;          <span class="number">367</span>d   v1.<span class="number">23.14</span>   <span class="number">192.168</span>.<span class="number">50.64</span>   &lt;none&gt;        Ubuntu <span class="number">20.04</span>.<span class="number">3</span> LTS   <span class="number">5.4</span>.<span class="number">0</span><span class="literal">-125</span><span class="literal">-generic</span>   docker://<span class="number">20.10</span>.<span class="number">10</span></span><br><span class="line">cluster<span class="literal">-node03</span>   Ready    &lt;none&gt;          <span class="number">367</span>d   v1.<span class="number">23.14</span>   <span class="number">192.168</span>.<span class="number">50.65</span>   &lt;none&gt;        Ubuntu <span class="number">20.04</span>.<span class="number">3</span> LTS   <span class="number">5.4</span>.<span class="number">0</span><span class="literal">-125</span><span class="literal">-generic</span>   docker://<span class="number">20.10</span>.<span class="number">10</span></span><br><span class="line">cluster<span class="literal">-node04</span>   Ready    &lt;none&gt;          <span class="number">346</span>d   v1.<span class="number">23.14</span>   <span class="number">192.168</span>.<span class="number">50.68</span>   &lt;none&gt;        Ubuntu <span class="number">20.04</span>.<span class="number">3</span> LTS   <span class="number">5.4</span>.<span class="number">0</span><span class="literal">-125</span><span class="literal">-generic</span>   docker://<span class="number">20.10</span>.<span class="number">11</span></span><br></pre></td></tr></table></figure>

<p>        CONTAINER-RUNTIME 會由原本的 docker://20.10.10 改變為 containerd://1.4.11 至此確認 cluster 恢復正常運作.</p>
]]></content>
      <categories>
        <category>kubernetes</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>PrometheusOperator</title>
    <url>/2022/01/07/PrometheusOperator/</url>
    <content><![CDATA[<h1 id="kubernetes-監控"><a href="#kubernetes-監控" class="headerlink" title="kubernetes 監控"></a>kubernetes 監控</h1><blockquote>
<p>使用 Prometheus Operator 監控 kubernetes </p>
</blockquote>
<span id="more"></span>

<h2 id="創建-namespace-用於安裝-Prometheus-Operator"><a href="#創建-namespace-用於安裝-Prometheus-Operator" class="headerlink" title="創建 namespace 用於安裝 Prometheus Operator"></a>創建 namespace 用於安裝 Prometheus Operator</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl create namespace monitoring</span><br></pre></td></tr></table></figure>

<h2 id="拉取-Helm-安裝包"><a href="#拉取-Helm-安裝包" class="headerlink" title="拉取 Helm 安裝包"></a>拉取 Helm 安裝包</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">helm pull prometheus-community/kube-prometheus-stack</span><br></pre></td></tr></table></figure>

<h2 id="解壓縮"><a href="#解壓縮" class="headerlink" title="解壓縮"></a>解壓縮</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -xvf kube-prometheus-stack-23.1.1.tgz</span><br></pre></td></tr></table></figure>

<h2 id="設定-kubernetes"><a href="#設定-kubernetes" class="headerlink" title="設定 kubernetes"></a>設定 kubernetes</h2><blockquote>
<p>kubernetes 部分設定需進行修改 , Prometheus Targets 才能正常運作</p>
</blockquote>
<h3 id="設定-controller-manager"><a href="#設定-controller-manager" class="headerlink" title="設定 controller-manager"></a>設定 controller-manager</h3><ul>
<li><p>編輯 /etc/kubernetes/manifests/kube-controller-manager.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#修改預設綁定 IP , 原預設為 127.0.0.1 ,需修改為 0.0.0.0 才能供外部取得資料</span></span><br><span class="line"><span class="string">--bind-address=0.0.0.0</span></span><br></pre></td></tr></table></figure></li>
<li><p>重啟 kubelet</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">service kubelet restart</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="設定-scheduler"><a href="#設定-scheduler" class="headerlink" title="設定 scheduler"></a>設定 scheduler</h3><ul>
<li><p>編輯 /etc/kubernetes/manifests/kube-scheduler.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#修改預設綁定 IP , 原預設為 127.0.0.1 ,需修改為 0.0.0.0 才能供外部取得資料</span></span><br><span class="line"><span class="string">--bind-address=0.0.0.0</span></span><br></pre></td></tr></table></figure></li>
<li><p>重啟 kubelet</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">service kubelet restart</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="設定-kube-proxy"><a href="#設定-kube-proxy" class="headerlink" title="設定 kube-proxy"></a>設定 kube-proxy</h3><ul>
<li><p>訪問 kube-proxy 的 metrics 沒有任何安全憑證</p>
</li>
<li><p>編輯 kube-proxy 設定</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#修改預設綁定 IP , metricsBindAddress 原欲設為空 , 會自動綁定127.0.0.1 , 需修改為 0.0.0.0 才能供外部取得資料</span></span><br><span class="line"><span class="comment">#開啟編輯</span></span><br><span class="line"><span class="string">kubectl</span>  <span class="string">-n</span> <span class="string">kube-system</span> <span class="string">edit</span> <span class="string">cm</span> <span class="string">kube-proxy</span></span><br><span class="line"><span class="comment">#修改設定</span></span><br><span class="line"><span class="attr">metricsBindAddress:</span> <span class="string">&quot;0.0.0.0&quot;</span></span><br></pre></td></tr></table></figure></li>
<li><p>重新加載設定</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl -n kube-system rollout restart ds kube-proxy </span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="設定-etcd"><a href="#設定-etcd" class="headerlink" title="設定 etcd"></a>設定 etcd</h3><ul>
<li><p>自簽發一個 client 證書以訪問 etcd</p>
</li>
<li><p>使用 docker 產生自簽憑證</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 複製 etcd 至 tmp 資料夾方便進行映射</span></span><br><span class="line"><span class="string">cp</span> <span class="string">-r</span> <span class="string">/etc/kubernetes/pki/etcd/</span> <span class="string">/tmp</span></span><br><span class="line"><span class="comment"># 使用 docker 運行一個 linux 容器 並將 etcd 映射進容器內</span></span><br><span class="line"><span class="string">docker</span> <span class="string">run</span> <span class="string">--rm</span> <span class="string">-it</span> <span class="string">--net=host</span> <span class="string">-v</span> <span class="string">/tmp/etcd/:/etcd</span> <span class="string">rockylinux/rockylinux</span>  <span class="string">/bin/bash</span></span><br><span class="line"><span class="comment"># 再容器安裝 openssl 並產生憑證</span></span><br><span class="line"><span class="string">yum</span> <span class="string">install</span> <span class="string">openssl</span></span><br><span class="line"><span class="string">cd</span> <span class="string">/etcd</span></span><br><span class="line"><span class="string">openssl</span> <span class="string">genrsa</span> <span class="string">-out</span> <span class="string">client.key</span> <span class="number">4096</span></span><br><span class="line"><span class="string">openssl</span> <span class="string">req</span> <span class="string">-new</span> <span class="string">-key</span> <span class="string">client.key</span> <span class="string">-out</span> <span class="string">client.csr</span> <span class="string">-subj</span> <span class="string">&quot;/CN=client&quot;</span></span><br><span class="line"><span class="string">openssl</span> <span class="string">x509</span> <span class="string">-req</span> <span class="string">-days</span> <span class="number">3650</span> <span class="string">-in</span> <span class="string">client.csr</span> <span class="string">-CA</span> <span class="string">ca.crt</span> <span class="string">-CAkey</span> <span class="string">ca.key</span> <span class="string">-CAcreateserial</span> <span class="string">-out</span> <span class="string">client.crt</span></span><br></pre></td></tr></table></figure></li>
<li><p>驗證憑證</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl --cacert /tmp/etcd/ca.crt --cert /tmp/etcd/client.crt  --key /tmp/etcd/client.key -s  https://&lt;your master ip&gt;:2379/metrics |less</span><br></pre></td></tr></table></figure></li>
<li><p>創建 secret</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 將產生的憑證儲存至 secret 中</span></span><br><span class="line"><span class="built_in">cd</span> /tmp/etcd</span><br><span class="line">kubectl -n monitoring create secret generic \</span><br><span class="line">  kube-etcd-client-certs \</span><br><span class="line">  --from-file=etcd-client-ca.crt=ca.crt \</span><br><span class="line">  --from-file=etcd-client.crt=client.crt \</span><br><span class="line">  --from-file=etcd-client.key=client.key</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="自定義參數於-values-yaml-中進行修改"><a href="#自定義參數於-values-yaml-中進行修改" class="headerlink" title="自定義參數於 values.yaml 中進行修改"></a>自定義參數於 values.yaml 中進行修改</h2><h3 id="修改-admin-預設密碼"><a href="#修改-admin-預設密碼" class="headerlink" title="修改 admin 預設密碼"></a>修改 admin 預設密碼</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#admin 預設密碼</span></span><br><span class="line"><span class="attr">adminPassword:</span> </span><br></pre></td></tr></table></figure>

<h3 id="修改時區"><a href="#修改時區" class="headerlink" title="修改時區"></a>修改時區</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">## Timezone for the default dashboards</span></span><br><span class="line"><span class="comment">## Other options are: browser or a specific timezone, i.e. Europe/Luxembourg</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">defaultDashboardsTimezone:</span> <span class="string">utc</span></span><br></pre></td></tr></table></figure>

<h3 id="修改-kubeControllerManager"><a href="#修改-kubeControllerManager" class="headerlink" title="修改 kubeControllerManager"></a>修改 kubeControllerManager</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">kubeControllerManager:</span></span><br><span class="line"><span class="comment"># 新版本 kubeControllerManager 採用 10257 https 通訊端口</span></span><br><span class="line">  <span class="attr">service:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">10257</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">10257</span></span><br><span class="line">  <span class="attr">serviceMonitor:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">https:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">insecureSkipVerify:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h3 id="修改-kubeScheduler"><a href="#修改-kubeScheduler" class="headerlink" title="修改 kubeScheduler"></a>修改 kubeScheduler</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">kubeScheduler:</span></span><br><span class="line"><span class="comment"># kubeScheduler http 10251 端口已棄用 ,現行採用 10259 https 端口</span></span><br><span class="line">  <span class="attr">service:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">10259</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">10259</span></span><br><span class="line">  <span class="attr">serviceMonitor:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">https:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">insecureSkipVerify:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h3 id="修改-kubeEtcd"><a href="#修改-kubeEtcd" class="headerlink" title="修改 kubeEtcd"></a>修改 kubeEtcd</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">kubeEtcd:</span></span><br><span class="line">  <span class="attr">serviceMonitor:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">scheme:</span> <span class="string">https</span></span><br><span class="line">    <span class="attr">caFile:</span> <span class="string">&quot;/etc/prometheus/secrets/etcd-client-cert/etcd-client-ca.crt&quot;</span></span><br><span class="line">    <span class="attr">certFile:</span> <span class="string">&quot;/etc/prometheus/secrets/etcd-client-cert/etcd-client.crt&quot;</span></span><br><span class="line">    <span class="attr">keyFile:</span> <span class="string">&quot;/etc/prometheus/secrets/etcd-client-cert/etcd-client.key&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="修改-prometheus"><a href="#修改-prometheus" class="headerlink" title="修改 prometheus"></a>修改 prometheus</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">prometheus:</span></span><br><span class="line">  <span class="attr">prometheusSpec:</span></span><br><span class="line">  <span class="comment"># 掛載 etcd-client-cert 用於訪問 etcd</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">etcd-client-cert</span></span><br><span class="line">      <span class="attr">secret:</span></span><br><span class="line">        <span class="attr">defaultMode:</span> <span class="number">420</span></span><br><span class="line">        <span class="attr">secretName:</span> <span class="string">kube-etcd-client-certs</span></span><br><span class="line">    <span class="attr">volumeMounts:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/etc/prometheus/secrets/etcd-client-cert</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">etcd-client-cert</span></span><br><span class="line">        <span class="attr">readOnly:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h3 id="設定資料保存天數"><a href="#設定資料保存天數" class="headerlink" title="設定資料保存天數"></a>設定資料保存天數</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">prometheus:</span></span><br><span class="line">  <span class="attr">prometheusSpec:</span></span><br><span class="line">  	<span class="comment"># 設定資料保存天數 10天</span></span><br><span class="line">	<span class="attr">retention:</span> <span class="string">10d</span></span><br></pre></td></tr></table></figure>

<h3 id="增加持久化儲存"><a href="#增加持久化儲存" class="headerlink" title="增加持久化儲存"></a>增加持久化儲存</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">prometheus:</span></span><br><span class="line">  <span class="attr">prometheusSpec:</span></span><br><span class="line">    <span class="attr">storageSpec:</span> </span><br><span class="line">     <span class="attr">volumeClaimTemplate:</span></span><br><span class="line">       <span class="attr">spec:</span></span><br><span class="line">       	<span class="comment">#持久化儲存 ClassName 這邊使用前面建立的 local-path</span></span><br><span class="line">         <span class="attr">storageClassName:</span> <span class="string">local-path</span></span><br><span class="line">         <span class="attr">accessModes:</span> [<span class="string">&quot;ReadWriteOnce&quot;</span>]</span><br><span class="line">         <span class="attr">resources:</span></span><br><span class="line">           <span class="attr">requests:</span></span><br><span class="line">           	<span class="comment">#分配大小</span></span><br><span class="line">             <span class="attr">storage:</span> <span class="string">5Gi</span></span><br></pre></td></tr></table></figure>

<h3 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#使用 helm 安裝至準備好的 namespace 中</span></span><br><span class="line">helm install  homelab-monitoring . -n monitoring</span><br></pre></td></tr></table></figure>

<h3 id=""><a href="#" class="headerlink" title=""></a></h3>]]></content>
      <categories>
        <category>kubernetes</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
        <tag>Prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernetes 手動憑證更新</title>
    <url>/2022/11/19/Kubernetes-%E6%89%8B%E5%8B%95%E6%86%91%E8%AD%89%E6%9B%B4%E6%96%B0/</url>
    <content><![CDATA[<h3 id="Kubernetes-手動憑證更新"><a href="#Kubernetes-手動憑證更新" class="headerlink" title="Kubernetes 手動憑證更新"></a>Kubernetes 手動憑證更新</h3><h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>        在 master 執行 kubectl get pod 時出現 x509 certificate has expired or is not yet valid  憑證錯誤.</p>
<span id="more"></span>
<h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>        kubeadm 安裝 Kubernetes 時默認生成的 client certificate 有效期是1年 .</p>
<h3 id="自動更新憑證"><a href="#自動更新憑證" class="headerlink" title="自動更新憑證"></a>自動更新憑證</h3><p>        自動更新憑證機制為 kubeadm 會在控制介面版本升級一併更新憑證 , 用意為促使客戶定期執行版本升級.</p>
<h3 id="手動更新憑證"><a href="#手動更新憑證" class="headerlink" title="手動更新憑證"></a>手動更新憑證</h3><ul>
<li>        使用指令確認憑證有效時間</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">kubeadm certs check<span class="literal">-expiration</span></span><br></pre></td></tr></table></figure>

<ul>
<li>         顯示結果示例 </li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[<span class="type">check</span>-<span class="type">expiration</span>] Reading configuration from the cluster...</span><br><span class="line">[<span class="type">check</span>-<span class="type">expiration</span>] FYI: You can look at this config file with <span class="string">&#x27;kubectl -n kube-system get cm kubeadm-config -o yaml&#x27;</span></span><br><span class="line"></span><br><span class="line">CERTIFICATE                EXPIRES                  RESIDUAL TIME   CERTIFICATE AUTHORITY   EXTERNALLY MANAGED</span><br><span class="line">admin.conf                 Nov <span class="number">18</span>, <span class="number">2023</span> <span class="number">13</span>:<span class="number">38</span> UTC   <span class="number">364</span>d            ca                      no</span><br><span class="line">apiserver                  Nov <span class="number">18</span>, <span class="number">2023</span> <span class="number">13</span>:<span class="number">37</span> UTC   <span class="number">364</span>d            ca                      no</span><br><span class="line">apiserver<span class="literal">-etcd</span><span class="literal">-client</span>      Nov <span class="number">18</span>, <span class="number">2023</span> <span class="number">13</span>:<span class="number">37</span> UTC   <span class="number">364</span>d            etcd<span class="literal">-ca</span>                 no</span><br><span class="line">apiserver<span class="literal">-kubelet</span><span class="literal">-client</span>   Nov <span class="number">18</span>, <span class="number">2023</span> <span class="number">13</span>:<span class="number">37</span> UTC   <span class="number">364</span>d            ca                      no</span><br><span class="line">controller<span class="literal">-manager</span>.conf    Nov <span class="number">18</span>, <span class="number">2023</span> <span class="number">13</span>:<span class="number">37</span> UTC   <span class="number">364</span>d            ca                      no</span><br><span class="line">etcd<span class="literal">-healthcheck</span><span class="literal">-client</span>    Nov <span class="number">18</span>, <span class="number">2023</span> <span class="number">07</span>:<span class="number">43</span> UTC   <span class="number">363</span>d            etcd<span class="literal">-ca</span>                 no</span><br><span class="line">etcd<span class="literal">-peer</span>                  Nov <span class="number">18</span>, <span class="number">2023</span> <span class="number">07</span>:<span class="number">43</span> UTC   <span class="number">363</span>d            etcd<span class="literal">-ca</span>                 no</span><br><span class="line">etcd<span class="literal">-server</span>                Nov <span class="number">18</span>, <span class="number">2023</span> <span class="number">07</span>:<span class="number">43</span> UTC   <span class="number">363</span>d            etcd<span class="literal">-ca</span>                 no</span><br><span class="line">front<span class="literal">-proxy</span><span class="literal">-client</span>         Nov <span class="number">18</span>, <span class="number">2023</span> <span class="number">13</span>:<span class="number">37</span> UTC   <span class="number">364</span>d            front<span class="literal">-proxy</span><span class="literal">-ca</span>          no</span><br><span class="line">scheduler.conf             Nov <span class="number">18</span>, <span class="number">2023</span> <span class="number">13</span>:<span class="number">38</span> UTC   <span class="number">364</span>d            ca                      no</span><br><span class="line"></span><br><span class="line">CERTIFICATE AUTHORITY   EXPIRES                  RESIDUAL TIME   EXTERNALLY MANAGED</span><br><span class="line">ca                      Nov <span class="number">14</span>, <span class="number">2031</span> <span class="number">14</span>:<span class="number">17</span> UTC   <span class="number">8</span>y              no</span><br><span class="line">etcd<span class="literal">-ca</span>                 Nov <span class="number">14</span>, <span class="number">2031</span> <span class="number">14</span>:<span class="number">17</span> UTC   <span class="number">8</span>y              no</span><br><span class="line">front<span class="literal">-proxy</span><span class="literal">-ca</span>          Nov <span class="number">14</span>, <span class="number">2031</span> <span class="number">14</span>:<span class="number">17</span> UTC   </span><br></pre></td></tr></table></figure>

<p>         其中主要檢視 RESIDUAL TIME 憑證到期時間</p>
<ul>
<li>        使用指令刷新所有憑證<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kubeadm certs renew all </span><br></pre></td></tr></table></figure></li>
</ul>
<p>        此命令用 CA（或者 front-proxy-CA ）證書和存儲在 <code>/etc/kubernetes/pki</code> 中的密鑰執行更新 , 更新憑證後 RESIDUAL TIME 會更新為一年到期 , 與自動更新憑證套用一樣的機制 , 但這邊需特別注意若有多個 Master 則每一個 Master 節點上皆須要執行此命令 .</p>
<ul>
<li>        再次使用指令檢視憑證到期時間</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">kubeadm certs check<span class="literal">-expiration</span></span><br></pre></td></tr></table></figure>

<p>        若完成憑證更新 RESIDUAL TIME 憑證到期時間則會顯示一年.</p>
<ul>
<li>        重啟 Master 節點上的相關服務來完成證書更新 (方法一)</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">ps</span> |egrep <span class="string">&quot;k8s_kube-apiserver|k8s_kube-scheduler|k8s_kube-controller&quot;</span>|awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>|xargs docker restart</span><br></pre></td></tr></table></figure>

<p>          上述指令指重新啟動了 apiserver 、scheduler、controller 三個相關的服務 , 若有 etcd 則需連同 etcd 一併重啟.</p>
<ul>
<li>        重啟 Master 節點上的相關服務來完成證書更新 (方法二)</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">mkdir <span class="variable">$HOME</span>/manifests</span><br><span class="line"></span><br><span class="line">sudo <span class="built_in">mv</span>/etc/kubernetes/manifests/*.yaml <span class="variable">$HOME</span>/manifests <span class="comment">#等待至少 20 秒 , 讓 kubelet 去關閉相關的 pod</span></span><br><span class="line"></span><br><span class="line">sudomv <span class="variable">$HOME</span>/manifests/*yaml /etc/kubernetes/manifests <span class="comment">#等待幾分鐘讓 kubelet 重新創建相關的 pod</span></span><br></pre></td></tr></table></figure>

<ul>
<li>         更新 ~/.kube/config 文件</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">cp</span> <span class="literal">-i</span> /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line"></span><br><span class="line">sudo chown <span class="variable">$</span>(id <span class="literal">-u</span>):<span class="variable">$</span>(id <span class="literal">-g</span>) <span class="variable">$HOME</span>/.kube/config</span><br></pre></td></tr></table></figure>

<h3 id="檢查群集狀態"><a href="#檢查群集狀態" class="headerlink" title="檢查群集狀態"></a>檢查群集狀態</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">kubectl get node</span><br><span class="line">kubectl get pod</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>kubernetes</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
        <tag>certificate</tag>
      </tags>
  </entry>
  <entry>
    <title>Telegraf安裝</title>
    <url>/2021/12/15/Telegraf%E5%AE%89%E8%A3%9D/</url>
    <content><![CDATA[<h2 id="Telegraf安裝"><a href="#Telegraf安裝" class="headerlink" title="Telegraf安裝"></a>Telegraf安裝</h2><span id="more"></span>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">##</span></span><br><span class="line">wget -qO- https://repos.influxdata.com/influxdb.key | sudo apt-key add -</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> /etc/lsb-release</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb https://repos.influxdata.com/<span class="variable">$&#123;DISTRIB_ID,,&#125;</span> <span class="variable">$&#123;DISTRIB_CODENAME&#125;</span> stable&quot;</span> | sudo tee /etc/apt/sources.list.d/influxdb.list</span><br><span class="line"><span class="comment">##</span></span><br><span class="line">sudo apt-get update &amp;&amp; sudo apt-get install apt-transport-https</span><br><span class="line"></span><br><span class="line">wget -qO- https://repos.influxdata.com/influxdb.key | sudo apt-key add -</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> /etc/os-release</span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="built_in">test</span> <span class="variable">$VERSION_ID</span> = <span class="string">&quot;7&quot;</span> &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;deb https://repos.influxdata.com/debian wheezy stable&quot;</span> | sudo tee /etc/apt/sources.list.d/influxdb.list</span><br><span class="line"><span class="built_in">test</span> <span class="variable">$VERSION_ID</span> = <span class="string">&quot;8&quot;</span> &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;deb https://repos.influxdata.com/debian jessie stable&quot;</span> | sudo tee /etc/apt/sources.list.d/influxdb.list</span><br><span class="line"><span class="built_in">test</span> <span class="variable">$VERSION_ID</span> = <span class="string">&quot;9&quot;</span> &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;deb https://repos.influxdata.com/debian stretch stable&quot;</span> | sudo tee /etc/apt/sources.list.d/influxdb.list</span><br><span class="line"><span class="built_in">test</span> <span class="variable">$VERSION_ID</span> = <span class="string">&quot;10&quot;</span> &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;deb https://repos.influxdata.com/debian buster stable&quot;</span> | sudo tee /etc/apt/sources.list.d/influxdb.list</span><br><span class="line"><span class="comment">##</span></span><br><span class="line">sudo apt-get update &amp;&amp; sudo apt-get install telegraf</span><br><span class="line"></span><br><span class="line">sudo service telegraf start</span><br></pre></td></tr></table></figure>

<h2 id="產生-config-設定檔案"><a href="#產生-config-設定檔案" class="headerlink" title="產生 config 設定檔案"></a>產生 config 設定檔案</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># telegraf 命令</span></span><br><span class="line">telegraf config &gt; telegraf.conf</span><br><span class="line"><span class="comment"># 產生文件目錄</span></span><br><span class="line">/etc/telegraf/telegraf.conf</span><br></pre></td></tr></table></figure>

<h2 id="telegraf-conf設定"><a href="#telegraf-conf設定" class="headerlink" title="telegraf.conf設定"></a>telegraf.conf設定</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># indluxdb 位址</span></span><br><span class="line"><span class="string">urls</span> <span class="string">=</span> [<span class="string">&quot;&lt; your domain &gt;&quot;</span>]</span><br><span class="line"><span class="comment"># db 名稱</span></span><br><span class="line"><span class="string">database</span> <span class="string">=</span> <span class="string">&quot;telegraf&quot;</span></span><br><span class="line"><span class="comment"># 抓取網路狀態資料</span></span><br><span class="line">[[<span class="string">inputs.net</span>]]</span><br></pre></td></tr></table></figure>

<h2 id="重新啟動服務"><a href="#重新啟動服務" class="headerlink" title="重新啟動服務"></a>重新啟動服務</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo service telegraf restart</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>telegraf</tag>
      </tags>
  </entry>
  <entry>
    <title>Traefik 2.5 使用</title>
    <url>/2021/12/15/Traefik-2-5-%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="Traefik-使用"><a href="#Traefik-使用" class="headerlink" title="Traefik 使用"></a>Traefik 使用</h2><h3 id="網頁部屬"><a href="#網頁部屬" class="headerlink" title="網頁部屬"></a>網頁部屬</h3><blockquote>
<p>達成能以 HTTPS 訪問的網頁站點部屬,並能針對訪問者IP進行白名單限制</p>
</blockquote>
<span id="more"></span>
<h4 id="自有證書配置-HTTPS"><a href="#自有證書配置-HTTPS" class="headerlink" title="自有證書配置 HTTPS"></a>自有證書配置 HTTPS</h4><ul>
<li><p>使用 Cloudflare 簽署的免費 TLS 憑證</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用 kubectl 創建設定檔儲存憑證 </span></span><br><span class="line">kubectl create secret tls forest1106-cloudflare --cert=&lt;your.pem&gt; --key=&lt;your.key&gt; -n traefik-ingress</span><br></pre></td></tr></table></figure></li>
<li><p>自動生成HTTPS證書</p>
<ul>
<li>Traefik的ACME驗證方式主要有以下三種：<ul>
<li>dnsChallenge</li>
<li>tlsChallenge</li>
<li>httpChallenge</li>
</ul>
</li>
<li>採用 Cloudflare 簽署的免費 TLS 憑證較為方便不再贅述</li>
</ul>
</li>
</ul>
<h4 id="Traefik-Middlewares-設定"><a href="#Traefik-Middlewares-設定" class="headerlink" title="Traefik Middlewares 設定"></a>Traefik Middlewares 設定</h4><ul>
<li><p>traefik-real-ip</p>
<ul>
<li><p>pilot 插件,啟用方式在 my-value.yaml 中增加相關參數</p>
</li>
<li><p>建立文件 middleware-traefik-real-ip.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">traefik.containo.us/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Middleware</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">traefik-real-ip</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">traefik-ingress</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">plugin:</span></span><br><span class="line">    <span class="attr">traefik-real-ip:</span></span><br><span class="line">      <span class="attr">excludednets:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;1.1.1.1/24&quot;</span>    </span><br></pre></td></tr></table></figure></li>
<li><p>應用文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl apply -f middleware-traefik-real-ip.yaml</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>IP 白名單</p>
<ul>
<li><p>建立文件 middleware-ipwhiteList.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">traefik.containo.us/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Middleware</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ipwhitelist</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">traefik-ingress</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ipWhiteList:</span></span><br><span class="line">    <span class="attr">sourceRange:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&lt;</span> <span class="string">your</span> <span class="string">ip</span> <span class="string">&gt;</span></span><br><span class="line"><span class="string">    # 因搭配 cloudflare 後在 IP 取得上會直接取到 cloudflare 的代理 IP 而非真實 IP </span></span><br><span class="line"><span class="string">    # 因而搭配規則 traefik-real-ip 處理,將 IP 加入 X-Forwarded-For 中</span></span><br><span class="line"><span class="string">    # ex : X-Forwarded-For: &lt; your ip &gt;, &lt; cloudflare ip &gt;</span></span><br><span class="line"><span class="string">    # 並藉由深度設定取得真實 IP</span></span><br><span class="line"><span class="string">    ipStrategy:</span></span><br><span class="line"><span class="string">      depth: 1</span></span><br></pre></td></tr></table></figure></li>
<li><p>應用 middleware-ipwhiteList.yaml</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl apply -f .\middleware-ipwhiteList.yaml</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<h4 id="部屬測試服務-whoami"><a href="#部屬測試服務-whoami" class="headerlink" title="部屬測試服務 whoami"></a>部屬測試服務 whoami</h4><ul>
<li><p>建立 whoami.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">--- </span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span> </span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span> </span><br><span class="line"><span class="attr">metadata:</span> </span><br><span class="line">  <span class="attr">name:</span> <span class="string">whoami</span> </span><br><span class="line">  <span class="attr">labels:</span> </span><br><span class="line">    <span class="attr">app:</span> <span class="string">whoami</span> </span><br><span class="line"><span class="attr">spec:</span> </span><br><span class="line">  <span class="attr">containers:</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">whoami</span> </span><br><span class="line">      <span class="attr">image:</span> <span class="string">traefik/whoami:latest</span> </span><br><span class="line">      <span class="attr">ports:</span> </span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span> </span><br><span class="line"><span class="meta">--- </span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span> </span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span> </span><br><span class="line"><span class="attr">metadata:</span> </span><br><span class="line">  <span class="attr">name:</span> <span class="string">whoami</span> </span><br><span class="line"><span class="attr">spec:</span> </span><br><span class="line">  <span class="attr">ports:</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span> </span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">TCP</span> </span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">80</span> </span><br><span class="line">  <span class="attr">selector:</span> </span><br><span class="line">    <span class="attr">app:</span> <span class="string">whoami</span> </span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span> </span><br></pre></td></tr></table></figure></li>
<li><p>建立入口 whoami-ingress.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">traefik.containo.us/v1alpha1</span> </span><br><span class="line"><span class="attr">kind:</span> <span class="string">IngressRoute</span> </span><br><span class="line"><span class="attr">metadata:</span> </span><br><span class="line">  <span class="attr">name:</span> <span class="string">whoami-route</span> </span><br><span class="line"><span class="attr">spec:</span> </span><br><span class="line">  <span class="attr">entryPoints:</span> </span><br><span class="line">  <span class="bullet">-</span> <span class="string">websecure</span></span><br><span class="line">  <span class="attr">routes:</span> </span><br><span class="line">  <span class="bullet">-</span> <span class="attr">match:</span> <span class="string">Host(`whoami.forest-ds.org`)</span></span><br><span class="line">  	<span class="comment"># 套用 middleware</span></span><br><span class="line">    <span class="attr">middlewares:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">traefik-real-ip</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">ipwhitelist</span></span><br><span class="line">    <span class="attr">kind:</span> <span class="string">Rule</span> </span><br><span class="line">    <span class="attr">services:</span> </span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">whoami</span> </span><br><span class="line">        <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">  	<span class="comment"># 套用憑證</span></span><br><span class="line">    <span class="attr">secretName:</span> <span class="string">forest1106-cloudflare</span></span><br></pre></td></tr></table></figure></li>
<li><p>應用 whoami 服務</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 將服務部屬至 namespace traefik-ingress 下</span></span><br><span class="line">kubectl apply -f .\whoami.yaml -n traefik-ingress</span><br></pre></td></tr></table></figure></li>
<li><p>應用 whoami 入口規則</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 將入口規則部屬至 namespace traefik-ingress 下</span></span><br><span class="line">kubectl apply -f .\whoami-ingress.yaml -n traefik-ingress</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="本地既有服務導向"><a href="#本地既有服務導向" class="headerlink" title="本地既有服務導向"></a>本地既有服務導向</h3><blockquote>
<p>Traefik 導向不同 namespace 、 cluster 或既有存在於 kubernet 外的 service . 這種情況下，就不需要設定 label selector，因為此時的 service 並不是以 pod 作為 backend service ,所以必須自行定義  endpoint 供 service 指向 .</p>
</blockquote>
<h4 id="建立-endpoint-及-service-文件"><a href="#建立-endpoint-及-service-文件" class="headerlink" title="建立 endpoint 及 service 文件"></a>建立 endpoint 及 service 文件</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">my-service</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">8899</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="string">&lt;your</span> <span class="string">other</span> <span class="string">service</span> <span class="string">port&gt;</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Endpoints</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">my-service</span></span><br><span class="line"><span class="attr">subsets:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">addresses:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">ip:</span> <span class="string">&lt;your</span> <span class="string">other</span> <span class="string">service</span> <span class="string">ip&gt;</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">port:</span> <span class="string">&lt;your</span> <span class="string">other</span> <span class="string">service</span> <span class="string">port&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="建立-ingress-文件"><a href="#建立-ingress-文件" class="headerlink" title="建立 ingress 文件"></a>建立 ingress 文件</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">traefik.containo.us/v1alpha1</span> </span><br><span class="line"><span class="attr">kind:</span> <span class="string">IngressRoute</span> </span><br><span class="line"><span class="attr">metadata:</span> </span><br><span class="line">  <span class="attr">name:</span> <span class="string">ar-route</span> </span><br><span class="line"><span class="attr">spec:</span> </span><br><span class="line">  <span class="attr">entryPoints:</span> </span><br><span class="line">  <span class="bullet">-</span> <span class="string">websecure</span></span><br><span class="line">  <span class="attr">routes:</span> </span><br><span class="line">  <span class="bullet">-</span> <span class="attr">match:</span> <span class="string">Host(`your</span> <span class="string">domain`)</span></span><br><span class="line">    <span class="attr">middlewares:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">traefik-real-ip</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">ipwhitelist</span></span><br><span class="line">    <span class="attr">kind:</span> <span class="string">Rule</span> </span><br><span class="line">    <span class="attr">services:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">Service</span> </span><br><span class="line">        <span class="attr">name:</span> <span class="string">my-service</span></span><br><span class="line">        <span class="attr">namespace:</span> <span class="string">traefik-ingress</span></span><br><span class="line">        <span class="attr">passHostHeader:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">8899</span></span><br><span class="line">  <span class="attr">tls:</span> </span><br><span class="line">    <span class="attr">secretName:</span> <span class="string">forest1106-cloudflare</span></span><br></pre></td></tr></table></figure>

<h4 id="多端口服務設定"><a href="#多端口服務設定" class="headerlink" title="多端口服務設定"></a>多端口服務設定</h4><blockquote>
<p>若 Endpoint 有多個端口 Service 也可設定多個端口開放</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">my-service</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">MyApp</span></span><br><span class="line">  <span class="comment"># 透過指定不同的 name 可以清楚知道每個 port 的目的</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">9376</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">https</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">443</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">9377</span></span><br></pre></td></tr></table></figure>



<h3 id="TCP服務部屬"><a href="#TCP服務部屬" class="headerlink" title="TCP服務部屬"></a>TCP服務部屬</h3><blockquote>
<p>Traefik2.0 開始支援 TCP 服務,這邊以部屬單點 Redis 服務做來進行 TCP 服務暴露示範.</p>
</blockquote>
<h4 id="部屬-Redis"><a href="#部屬-Redis" class="headerlink" title="部屬 Redis"></a>部屬 Redis</h4><ul>
<li><p>建立 redis.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span> </span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span> </span><br><span class="line"><span class="attr">metadata:</span> </span><br><span class="line">  <span class="attr">name:</span> <span class="string">redis</span> </span><br><span class="line"><span class="attr">spec:</span> </span><br><span class="line">  <span class="attr">selector:</span> </span><br><span class="line">    <span class="attr">matchLabels:</span> </span><br><span class="line">      <span class="attr">app:</span> <span class="string">redis</span> </span><br><span class="line">  <span class="attr">template:</span> </span><br><span class="line">    <span class="attr">metadata:</span> </span><br><span class="line">      <span class="attr">labels:</span> </span><br><span class="line">        <span class="attr">app:</span> <span class="string">redis</span> </span><br><span class="line">    <span class="attr">spec:</span> </span><br><span class="line">      <span class="attr">containers:</span> </span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">redis</span> </span><br><span class="line">        <span class="attr">image:</span> <span class="string">redis:5.0.14</span> </span><br><span class="line">        <span class="attr">ports:</span> </span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">6379</span> </span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span> </span><br><span class="line"><span class="meta">--- </span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span> </span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span> </span><br><span class="line"><span class="attr">metadata:</span> </span><br><span class="line">  <span class="attr">name:</span> <span class="string">redis</span> </span><br><span class="line"><span class="attr">spec:</span> </span><br><span class="line">  <span class="attr">ports:</span> </span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">6379</span> </span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">6379</span> </span><br><span class="line">  <span class="attr">selector:</span> </span><br><span class="line">    <span class="attr">app:</span> <span class="string">redis</span> </span><br></pre></td></tr></table></figure></li>
<li><p>應用 redis.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">kubectl</span> <span class="string">apply</span> <span class="string">-f</span> <span class="string">redis.yaml</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="暴露-TCP-服務"><a href="#暴露-TCP-服務" class="headerlink" title="暴露 TCP 服務"></a>暴露 TCP 服務</h4><blockquote>
<p>由於 Traefik 中使用 TCP 路由配置需要 SNI ,而 SNI 依賴 TLS 所以需要配置證書,但如果沒有證書的話,可以使用萬用字元 * 進行配置.</p>
</blockquote>
<ul>
<li><p>建立 ingressroute-redis.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">traefik.containo.us/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">IngressRouteTCP</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">redis</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">entryPoints:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">redis</span></span><br><span class="line">  <span class="attr">routes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">match:</span> <span class="string">HostSNI(`*`)</span></span><br><span class="line">    <span class="attr">services:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">redis</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">6379</span></span><br></pre></td></tr></table></figure></li>
<li><p>修改 Traefik 的部署文件 my-value.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">ports:</span> </span><br><span class="line">  <span class="attr">traefik:</span> </span><br><span class="line">    <span class="attr">port:</span> <span class="number">9000</span> </span><br><span class="line">    <span class="attr">expose:</span> <span class="literal">true</span> </span><br><span class="line">  <span class="attr">web:</span> </span><br><span class="line">    <span class="attr">port:</span> <span class="number">8000</span> </span><br><span class="line">    <span class="attr">hostPort:</span> <span class="number">80</span> </span><br><span class="line">    <span class="attr">expose:</span> <span class="literal">true</span> </span><br><span class="line">  <span class="attr">websecure:</span> </span><br><span class="line">    <span class="attr">port:</span> <span class="number">8443</span> </span><br><span class="line">    <span class="attr">hostPort:</span> <span class="number">443</span> </span><br><span class="line">    <span class="attr">expose:</span> <span class="literal">true</span> </span><br><span class="line">  <span class="comment">#增加監聽端口</span></span><br><span class="line">  <span class="attr">redis:</span> </span><br><span class="line">    <span class="attr">port:</span> <span class="number">6379</span> </span><br><span class="line">    <span class="attr">containerPort:</span> <span class="number">6379</span> </span><br><span class="line">    <span class="attr">hostPort:</span> <span class="number">6379</span> </span><br><span class="line"><span class="attr">additionalArguments:</span> </span><br><span class="line">  <span class="comment">#增加 entryPoints 參數</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;--entryPoints.redis.address=:6379&quot;</span> </span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;--serversTransport.insecureSkipVerify=true&quot;</span> </span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;--api.insecure=true&quot;</span> </span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;--api.dashboard=true&quot;</span> </span><br></pre></td></tr></table></figure></li>
<li><p>應用 ingressroute-redis.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">kubectl</span> <span class="string">apply</span> <span class="string">-f</span> <span class="string">ingressroute-redis.yaml</span></span><br></pre></td></tr></table></figure></li>
<li><p>Upgrade Traefik 以套用參數</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">helm</span> <span class="string">upgrade</span> <span class="string">traefik</span> <span class="string">-n</span> <span class="string">traefik-ingress</span> <span class="string">-f</span> <span class="string">my-value.yaml</span> <span class="string">.</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="測試-Redis"><a href="#測試-Redis" class="headerlink" title="測試  Redis"></a>測試  Redis</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># redis-cli -h &lt;your domain&gt; </span></span><br><span class="line">&lt;your domain&gt;:6379&gt; <span class="built_in">set</span>  a b </span><br><span class="line">OK </span><br><span class="line">&lt;your domain&gt;:6379&gt; get a </span><br><span class="line"><span class="string">&quot;b&quot;</span> </span><br><span class="line">&lt;your domain&gt;:6379&gt;  </span><br></pre></td></tr></table></figure>

<h3 id="Canary-Deployment-金絲雀發布-Gray-Release-灰度發布"><a href="#Canary-Deployment-金絲雀發布-Gray-Release-灰度發布" class="headerlink" title="Canary Deployment ( 金絲雀發布 ) /  Gray Release ( 灰度發布 )"></a>Canary Deployment ( 金絲雀發布 ) /  Gray Release ( 灰度發布 )</h3><blockquote>
<p>灰度發布有時候也會稱為金絲雀發布,主要就是讓一部分測試的服務也參與到線上去,測試觀察看是否符號上線要求。</p>
</blockquote>
<h4 id="部署-appv1-、-appv2-應用測試灰度發布"><a href="#部署-appv1-、-appv2-應用測試灰度發布" class="headerlink" title="部署 appv1 、 appv2 應用測試灰度發布"></a>部署 appv1 、 appv2 應用測試灰度發布</h4><ul>
<li><p>建立 appv1.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">--- </span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span> </span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span> </span><br><span class="line"><span class="attr">metadata:</span> </span><br><span class="line">  <span class="attr">name :</span> <span class="string">appv1</span> </span><br><span class="line"><span class="attr">spec:</span> </span><br><span class="line">  <span class="attr">selector:</span> </span><br><span class="line">    <span class="attr">matchLabels:</span> </span><br><span class="line">      <span class="attr">app:</span> <span class="string">appv1</span> </span><br><span class="line">  <span class="attr">template:</span> </span><br><span class="line">    <span class="attr">metadata:</span> </span><br><span class="line">      <span class="attr">labels:</span> </span><br><span class="line">        <span class="attr">use:</span> <span class="string">test</span> </span><br><span class="line">        <span class="attr">app:</span> <span class="string">appv1</span> </span><br><span class="line">    <span class="attr">spec:</span> </span><br><span class="line">      <span class="attr">containers:</span> </span><br><span class="line">      <span class="bullet">-</span>  <span class="attr">name :</span> <span class="string">nginx</span> </span><br><span class="line">        <span class="attr">image:</span> <span class="string">nginx</span> </span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span> </span><br><span class="line">        <span class="attr">lifecycle:</span> </span><br><span class="line">          <span class="attr">postStart:</span> </span><br><span class="line">            <span class="attr">exec :</span></span><br><span class="line">              <span class="comment"># 首頁插入文字區別 appv1</span></span><br><span class="line">              <span class="attr">command:</span>  [ <span class="string">&quot;/bin/sh&quot;</span> ,  <span class="string">&quot;-c&quot;</span> ,  <span class="string">&quot;echo Hello v1 &gt; /usr/share/nginx/html/index.html&quot;</span> ] </span><br><span class="line">        <span class="attr">ports:</span> </span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span> </span><br><span class="line">          <span class="attr">name :</span> <span class="string">portv1</span> </span><br><span class="line"> </span><br><span class="line"><span class="meta">--- </span></span><br><span class="line"><span class="meta"> </span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span> </span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span> </span><br><span class="line"><span class="attr">metadata:</span> </span><br><span class="line">  <span class="attr">name :</span> <span class="string">appv1</span> </span><br><span class="line"><span class="attr">spec:</span> </span><br><span class="line">  <span class="attr">selector:</span> </span><br><span class="line">    <span class="attr">app:</span> <span class="string">appv1</span> </span><br><span class="line">  <span class="attr">ports:</span> </span><br><span class="line">  <span class="bullet">-</span>  <span class="attr">name :</span> <span class="string">http</span> </span><br><span class="line">    <span class="attr">port:</span> <span class="number">80</span> </span><br><span class="line">    <span class="attr">targetPort:</span> <span class="string">portv1</span> </span><br></pre></td></tr></table></figure></li>
<li><p>建立 appv2.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">--- </span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span> </span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span> </span><br><span class="line"><span class="attr">metadata:</span> </span><br><span class="line">  <span class="attr">name :</span> <span class="string">appv2</span> </span><br><span class="line"><span class="attr">spec:</span> </span><br><span class="line">  <span class="attr">selector:</span> </span><br><span class="line">    <span class="attr">matchLabels:</span> </span><br><span class="line">      <span class="attr">app:</span> <span class="string">appv2</span> </span><br><span class="line">  <span class="attr">template:</span> </span><br><span class="line">    <span class="attr">metadata:</span> </span><br><span class="line">      <span class="attr">labels:</span> </span><br><span class="line">        <span class="attr">use:</span> <span class="string">test</span> </span><br><span class="line">        <span class="attr">app:</span> <span class="string">appv2</span> </span><br><span class="line">    <span class="attr">spec:</span> </span><br><span class="line">      <span class="attr">containers:</span> </span><br><span class="line">      <span class="bullet">-</span>  <span class="attr">name :</span> <span class="string">nginx</span> </span><br><span class="line">        <span class="attr">image:</span> <span class="string">nginx</span> </span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span> </span><br><span class="line">        <span class="attr">lifecycle:</span> </span><br><span class="line">          <span class="attr">postStart:</span> </span><br><span class="line">            <span class="attr">exec :</span> </span><br><span class="line">              <span class="comment"># 首頁插入文字區別 appv2</span></span><br><span class="line">              <span class="attr">command:</span>  [ <span class="string">&quot;/bin/sh&quot;</span> ,  <span class="string">&quot;-c&quot;</span> ,  <span class="string">&quot;echo Hello v2 &gt; /usr/share/nginx/html/index.html&quot;</span> ] </span><br><span class="line">        <span class="attr">ports:</span> </span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span> </span><br><span class="line">          <span class="attr">name :</span> <span class="string">portv2</span> </span><br><span class="line"> </span><br><span class="line"><span class="meta">--- </span></span><br><span class="line"><span class="meta"> </span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span> </span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span> </span><br><span class="line"><span class="attr">metadata:</span> </span><br><span class="line">  <span class="attr">name :</span> <span class="string">appv2</span> </span><br><span class="line"><span class="attr">spec:</span> </span><br><span class="line">  <span class="attr">selector:</span> </span><br><span class="line">    <span class="attr">app:</span> <span class="string">appv2</span> </span><br><span class="line">  <span class="attr">ports:</span> </span><br><span class="line">  <span class="bullet">-</span>  <span class="attr">name :</span> <span class="string">http</span> </span><br><span class="line">    <span class="attr">port:</span> <span class="number">80</span> </span><br><span class="line">    <span class="attr">targetPort:</span> <span class="string">portv2</span> </span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="創建TraefikService"><a href="#創建TraefikService" class="headerlink" title="創建TraefikService"></a>創建TraefikService</h4><blockquote>
<p>Traefik 在 2.1 版本以後新增了一個 TraefikService的CRD 可以直接利用這個對象來配置WRR.</p>
</blockquote>
<ul>
<li><p>建立 gray-service.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">traefik.containo.us/v1alpha1</span> </span><br><span class="line"><span class="attr">kind:</span> <span class="string">TraefikService</span> </span><br><span class="line"><span class="attr">metadata:</span> </span><br><span class="line">  <span class="attr">name :</span> <span class="string">app-wrr</span> </span><br><span class="line"><span class="attr">spec:</span> </span><br><span class="line">  <span class="attr">weighted:</span> </span><br><span class="line">    <span class="attr">services:</span> </span><br><span class="line">      <span class="comment"># 設定帶權重的輪詢(WRR)</span></span><br><span class="line">      <span class="bullet">-</span>  <span class="attr">name :</span> <span class="string">appv1</span> </span><br><span class="line">        <span class="attr">weight:</span> <span class="number">3</span> </span><br><span class="line">        <span class="attr">port:</span> <span class="number">80</span> </span><br><span class="line">        <span class="attr">kind:</span> <span class="string">Service</span> </span><br><span class="line">      <span class="bullet">-</span>  <span class="attr">name :</span> <span class="string">appv2</span> </span><br><span class="line">        <span class="attr">weight:</span> <span class="number">1</span> </span><br><span class="line">        <span class="attr">port:</span> <span class="number">80</span> </span><br><span class="line">        <span class="attr">kind:</span> <span class="string">Service</span> </span><br></pre></td></tr></table></figure></li>
<li><p>建立 gray-ingress.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">traefik.containo.us/v1alpha1</span> </span><br><span class="line"><span class="attr">kind:</span> <span class="string">IngressRoute</span> </span><br><span class="line"><span class="attr">metadata:</span> </span><br><span class="line">  <span class="attr">name :</span> <span class="string">app-ingressroute-canary</span>  </span><br><span class="line"><span class="attr">spec:</span> </span><br><span class="line">  <span class="attr">entryPoints:</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="string">web</span> </span><br><span class="line">  <span class="attr">routes:</span> </span><br><span class="line">  <span class="comment"># 注意這邊 sevice kid 要設定為 TraefikService</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">match:</span> <span class="string">Host(`&lt;your</span> <span class="string">domain&gt;`)</span> </span><br><span class="line">    <span class="attr">kind:</span>  <span class="string">Rule</span> </span><br><span class="line">    <span class="attr">services:</span> </span><br><span class="line">    <span class="bullet">-</span>  <span class="attr">name :</span> <span class="string">app-wrr</span> </span><br><span class="line">      <span class="attr">kind:</span> <span class="string">TraefikService</span> </span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="進行測試"><a href="#進行測試" class="headerlink" title="進行測試"></a>進行測試</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 依照 WRR 設定顯示結果</span></span><br><span class="line">Curl https://&lt;your domain&gt;</span><br></pre></td></tr></table></figure>

<h3 id="流量複製"><a href="#流量複製" class="headerlink" title="流量複製"></a>流量複製</h3><blockquote>
<p>在 Traefik 2.0 之後引入了的鏡像服務,它可以將請求的流量按規則復制一份發送給其他服務,並且會忽略這部分請求的響應.</p>
</blockquote>
<h4 id="創建TraefikService-1"><a href="#創建TraefikService-1" class="headerlink" title="創建TraefikService"></a>創建TraefikService</h4><blockquote>
<p>應用部分使用 appv1 、 appv2 進行測試,這邊僅新增鏡像規則,及路由規則</p>
</blockquote>
<ul>
<li><p>建立 mirror-service.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">traefik.containo.us/v1alpha1</span> </span><br><span class="line"><span class="attr">kind:</span> <span class="string">TraefikService</span> </span><br><span class="line"><span class="attr">metadata:</span> </span><br><span class="line">  <span class="attr">name :</span> <span class="string">app-mirror</span> </span><br><span class="line"><span class="attr">spec:</span> </span><br><span class="line">  <span class="attr">mirroring:</span> </span><br><span class="line">    <span class="attr">name :</span> <span class="string">appv1</span> </span><br><span class="line">    <span class="attr">port:</span> <span class="number">80</span> </span><br><span class="line">    <span class="attr">mirrors:</span> </span><br><span class="line">    <span class="bullet">-</span>  <span class="attr">name :</span> <span class="string">appv2</span> </span><br><span class="line">      <span class="comment"># 定義將請求到 appv1 的 50% 請求復製到 appv2</span></span><br><span class="line">      <span class="attr">percent:</span> <span class="number">50</span> </span><br><span class="line">      <span class="attr">port:</span> <span class="number">80</span> </span><br></pre></td></tr></table></figure></li>
<li><p>建立 mirror-ingress.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">traefik.containo.us/v1alpha1</span> </span><br><span class="line"><span class="attr">kind:</span> <span class="string">IngressRoute</span> </span><br><span class="line"><span class="attr">metadata:</span> </span><br><span class="line">  <span class="attr">name :</span> <span class="string">app-ingressroute-mirror</span> </span><br><span class="line"><span class="attr">spec:</span> </span><br><span class="line">  <span class="attr">entryPoints:</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="string">web</span> </span><br><span class="line">  <span class="attr">routes:</span> </span><br><span class="line">  <span class="bullet">-</span> <span class="attr">match:</span> <span class="string">Host(`&lt;your</span> <span class="string">domain&gt;`)</span> </span><br><span class="line">    <span class="attr">kind:</span>  <span class="string">Rule</span> </span><br><span class="line">    <span class="attr">services:</span> </span><br><span class="line">    <span class="bullet">-</span>  <span class="attr">name :</span> <span class="string">app-mirror</span> </span><br><span class="line">      <span class="attr">kind:</span> <span class="string">TraefikService</span> </span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="進行測試-1"><a href="#進行測試-1" class="headerlink" title="進行測試"></a>進行測試</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 依照 mirror 設定顯示結果,此 Curl 僅會有 v1 響應.</span></span><br><span class="line">Curl https://&lt;your domain&gt;</span><br><span class="line"><span class="comment"># 檢查 v1 , v2 service log 應與 mirror 規則相符 ex: 4次需求 v1 4次 , v2 2次</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>kubernetes</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
        <tag>Traefik</tag>
      </tags>
  </entry>
  <entry>
    <title>kubernetes本地安裝到服務建立</title>
    <url>/2021/12/15/kubernetes%E6%9C%AC%E5%9C%B0%E5%AE%89%E8%A3%9D%E5%88%B0%E6%9C%8D%E5%8B%99%E5%BB%BA%E7%AB%8B/</url>
    <content><![CDATA[<h2 id="kubeadm-搭建-kubernetes-群集"><a href="#kubeadm-搭建-kubernetes-群集" class="headerlink" title="kubeadm 搭建 kubernetes 群集"></a>kubeadm 搭建 kubernetes 群集</h2><h3 id="安装-Container-Runtime"><a href="#安装-Container-Runtime" class="headerlink" title="安装 Container Runtime"></a>安装 Container Runtime</h3><p>​    Container Runtime 是負責運行 Kubernetes 支持多種容器運行環境: Docker, Containerd, CRI-O.</p>
<p>​    這邊使用 Docker 作為Container Runtime.</p>
<span id="more"></span>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Warning:</span></span><br><span class="line"><span class="comment">#Always examine scripts downloaded from the internet before running them locally.</span></span><br><span class="line"></span><br><span class="line">curl -fsSL https://get.docker.com -o get-docker.sh</span><br><span class="line">sudo sh get-docker.sh</span><br></pre></td></tr></table></figure>

<p>備註 : </p>
<p>​        需修改 docker 的 cgroup driver.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#cgroups ( Control Groups ) 是linux 內核提供的一種機制它可以限制、記錄任務組所使用的物理資源它是內核附加在程序上的hook,使程序運行時對資源的調度觸發相應的hook,達到資源追踪和限制資源使用的目的.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#docker 默認的 Cgroup Driver 是 cgroupfs , cgroupfs 是 cgroup 為給用戶提供的操作接口而開發的虛擬文件系統類型,它和 sysfs , proc 類似, 可以向用戶展示cgroup 的 hierarchy ,通知 kernel 用戶對 cgroup 改動,對 cgroup 的查詢和修改只能通過 cgroupfs 文件系統來進行.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Kubernetes 推薦使用 systemd 來代替 cgroupfs , 因為 systemd 是 Kubernetes 自帶的 cgroup 管理器,負責為每個進程分配 cgroups ,但 docker 的 cgroup driver 默認是 cgroupfs , 這樣就同時運行有兩個 cgroup 控制管理器,當資源有壓力的情況時,有可能出現不穩定的情況.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#打開 daemon.json</span></span><br><span class="line">nano /etc/docker/daemon.json</span><br><span class="line"></span><br><span class="line"><span class="comment">#填入</span></span><br><span class="line">&#123;<span class="string">&quot;exec-opts&quot;</span>: [<span class="string">&quot;native.cgroupdriver=systemd&quot;</span>]&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#重啟 docker</span></span><br><span class="line">systemctl restart docker</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="安装-kubeadm、kubelet-和-kubectl"><a href="#安装-kubeadm、kubelet-和-kubectl" class="headerlink" title="安装 kubeadm、kubelet 和 kubectl"></a>安装 kubeadm、kubelet 和 kubectl</h3><ul>
<li><code>kubeadm</code>：用來初始化集群的指令。</li>
<li><code>kubelet</code>：在集群中的每個節點上用來啟動Pod 和容器等。</li>
<li><code>kubectl</code>：用來與集群通信的命令行工具。</li>
</ul>
<blockquote>
<p>kubeadm 不能幫你安裝或者管理 如果不這樣做，則存在發生版本偏差的風險，可能會導致一些預料之外的錯誤和問題。</p>
<p>然而，控制平面與kubelet 間的相差一個次要版本不一致是支持的，但kubelet 的版本不可以超過API 服務器的版本。</p>
<p>例如，1.7.0 版本的kubelet 可以完全兼容1.8.0 版本的API 服務器，反之則不可以。</p>
</blockquote>
<ul>
<li><p>安裝之前關閉swap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#編輯fstab</span></span><br><span class="line">nano /etc/fstab</span><br><span class="line"></span><br><span class="line"><span class="comment">#註解 swap</span></span><br><span class="line">/swap.img &gt; <span class="comment">#/swap.img</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#重新啟動</span></span><br><span class="line">reboot</span><br></pre></td></tr></table></figure>

<blockquote>
<p>​        kubernetes 會要求關閉主機的 swap 交換空間，是因為在 cpu及 memory 不足的情況下, unix 系統預設會將記憶體內的資料搬移到 swap 做交換,但這種交換動作對於容器平台來說非常浪費效能，kubernetes 希望在 cpu及 memory 滿載的時候直接將 node 視為滿載,並回報 master 調度,所以才會有將 swap 關閉,避免交換造成效能浪費.</p>
</blockquote>
</li>
<li><p>更新 apt </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install -y apt-transport-https ca-certificates curl</span><br></pre></td></tr></table></figure></li>
<li><p>下載Google Cloud 公開簽名秘鑰</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg</span><br></pre></td></tr></table></figure></li>
<li><p>添加Kubernetes apt</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main&quot;</span> | sudo tee /etc/apt/sources.list.d/kubernetes.list</span><br></pre></td></tr></table></figure></li>
<li><p>更新 apt</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install -y kubelet kubeadm kubectl</span><br><span class="line">sudo apt-mark hold kubelet kubeadm kubectl</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="kubeadm-創建群集"><a href="#kubeadm-創建群集" class="headerlink" title="kubeadm 創建群集"></a>kubeadm 創建群集</h3><ul>
<li><p>kubeadm 初始化</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#初始化</span></span><br><span class="line">kubeadm init --pod-network-cidr 10.244.0.0/16</span><br><span class="line"><span class="comment"># --apiserver-advertise-address: Api server 服務 IP</span></span><br><span class="line"><span class="comment"># --apiserver-bind-port: Api server 服務 port，預設 6443</span></span><br><span class="line"><span class="comment"># --pod-network-cidr: 分配 Pod IP 範圍 (CIDR)</span></span><br><span class="line"><span class="comment"># --kubernetes-version: 指定 Kubernetes 版本</span></span><br></pre></td></tr></table></figure></li>
<li><p>運行成功訊息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Your Kubernetes control-plane has initialized successfully!</span><br><span class="line"></span><br><span class="line">To start using your cluster, you need to run the following as a regular user:</span><br><span class="line"></span><br><span class="line">  mkdir -p <span class="variable">$HOME</span>/.kube</span><br><span class="line">  sudo cp -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">  sudo chown $(id -u):$(id -g) <span class="variable">$HOME</span>/.kube/config</span><br><span class="line"></span><br><span class="line">You should now deploy a Pod network to the cluster.</span><br><span class="line">Run <span class="string">&quot;kubectl apply -f [podnetwork].yaml&quot;</span> with one of the options listed at:</span><br><span class="line">  /docs/concepts/cluster-administration/addons/</span><br><span class="line"></span><br><span class="line">You can now join any number of machines by running the following on each node</span><br><span class="line">as root:</span><br><span class="line"></span><br><span class="line">  kubeadm join &lt;control-plane-host&gt;:&lt;control-plane-port&gt; --token &lt;token&gt; --discovery-token-ca-cert-hash sha256:&lt;<span class="built_in">hash</span>&gt;</span><br><span class="line">  </span><br><span class="line"><span class="comment">## kubeadm join 資訊為加入節點需要,若沒紀錄可透過指令獲得</span></span><br></pre></td></tr></table></figure></li>
<li><p>要使非root 用戶可以運行 kubectl,運行以下命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -p <span class="variable">$HOME</span>/.kube</span><br><span class="line">sudo cp -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">sudo chown $(id -u):$(id -g) <span class="variable">$HOME</span>/.kube/config</span><br></pre></td></tr></table></figure></li>
<li><p>root 用戶則使用以下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> KUBECONFIG=/etc/kubernetes/admin.conf</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="使用-Lens-管理群集"><a href="#使用-Lens-管理群集" class="headerlink" title="使用 Lens 管理群集"></a>使用 Lens 管理群集</h3><ul>
<li><p>Lens 網址</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://k8slens.dev/</span><br></pre></td></tr></table></figure></li>
<li><p>Lens 加入管理群集</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#使用 Kubeconfig 加入群集</span></span><br><span class="line">cat /etc/kubernetes/admin.conf</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="kubernetes-網路插件"><a href="#kubernetes-網路插件" class="headerlink" title="kubernetes 網路插件"></a>kubernetes 網路插件</h3><ul>
<li><p>目前大致有四種插件( Flannel 、 Calico 、 Weave 和 Canal ) ,這裡選擇較為簡易的 Flannel進行實作</p>
</li>
<li><p>安裝 Pod 網路附加組件</p>
<ul>
<li><p>Flannel</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#下載文件</span></span><br><span class="line">wget https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span><br><span class="line"><span class="comment">#將配置文件 kube-flannel.yaml 中的 net-conf.json.network 修改為 kubeadm init 時自定義的網段</span></span><br><span class="line"><span class="comment">#文件預設為 10.244.0.0/16 與上方 kubeadm init 時設定的 --pod-network-cidr 10.244.0.0/16 一致,可直接應用</span></span><br><span class="line">  net-conf.json: |</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;Network&quot;</span>: <span class="string">&quot;10.244.0.0/16&quot;</span>,</span><br><span class="line">      <span class="string">&quot;Backend&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;Type&quot;</span>: <span class="string">&quot;vxlan&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">#應用文件</span></span><br><span class="line">kubectl apply -f kube-flannel.yaml</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>比較參考文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://segmentfault.com/a/1190000018698263</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="kubernetes-節點加入"><a href="#kubernetes-節點加入" class="headerlink" title="kubernetes 節點加入"></a>kubernetes 節點加入</h3><ul>
<li><p>將新的機器加入集群之前,需要在新機器上執行三個步驟 :</p>
<ul>
<li>安裝runtime ( docker )</li>
<li>安裝kubeadm , kubelet 和 kubectl</li>
<li>配置cgroup</li>
</ul>
</li>
<li><p>在工作節點上執行初始化時給出的命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubeadm join &lt;control-plane-host&gt;:&lt;control-plane-port&gt; --token &lt;token&gt; --discovery-token-ca-cert-hash sha256:&lt;<span class="built_in">hash</span>&gt;</span><br></pre></td></tr></table></figure></li>
<li><p>如果沒有令牌，可以通過在控制平面節點上運行以下命令來獲取令牌：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubeadm token list</span><br></pre></td></tr></table></figure></li>
<li><p>默認情況下，令牌會在24小時後過期。如果要在當前令牌過期後將節點加入集群， 則可以通過在控制平面節點上運行以下命令來創建新令牌：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubeadm token create</span><br></pre></td></tr></table></figure></li>
<li><p>如果沒有  –discovery-token-ca-cert-hash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl x509 -pubkey -<span class="keyword">in</span> /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2&gt;/dev/null | \</span><br><span class="line">   openssl dgst -sha256 -hex | sed <span class="string">&#x27;s/^.* //&#x27;</span></span><br></pre></td></tr></table></figure></li>
<li><p>節點加入成功輸出應類似於：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[preflight] Running pre-flight checks</span><br><span class="line"></span><br><span class="line">... (<span class="built_in">log</span> output of join workflow) ...</span><br><span class="line"></span><br><span class="line">Node join complete:</span><br><span class="line">* Certificate signing request sent to control-plane and response</span><br><span class="line">  received.</span><br><span class="line">* Kubelet informed of new secure connection details.</span><br><span class="line"></span><br><span class="line">Run <span class="string">&#x27;kubectl get nodes&#x27;</span> on control-plane to see this machine join.</span><br></pre></td></tr></table></figure></li>
<li><p>在控制平面節點上執行以下指令獲得運行中的節點資訊：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl get nodes</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="kubernetes-持久卷（Persistent-Volume）-建立"><a href="#kubernetes-持久卷（Persistent-Volume）-建立" class="headerlink" title="kubernetes 持久卷（Persistent Volume） 建立"></a>kubernetes 持久卷（Persistent Volume） 建立</h3><ul>
<li><p>採用 local-path</p>
</li>
<li><p>使用以下指令配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl apply -f https://raw.githubusercontent.com/rancher/local-path-provisioner/master/deploy/local-path-storage.yaml</span><br></pre></td></tr></table></figure></li>
<li><p>配置說明及來源網址</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://github.com/rancher/local-path-provisioner<span class="comment">#deployment</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="kubernetes-群集服務部屬"><a href="#kubernetes-群集服務部屬" class="headerlink" title="kubernetes 群集服務部屬"></a>kubernetes 群集服務部屬</h2><h3 id="kubernetes-群集監控建立"><a href="#kubernetes-群集監控建立" class="headerlink" title="kubernetes 群集監控建立"></a>kubernetes 群集監控建立</h3><blockquote>
<p>使用 Prometheus Operator 搭建群集監控</p>
</blockquote>
<ul>
<li><p>創建 namespace 用於安裝 Prometheus Operator</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl create namespace monitoring</span><br></pre></td></tr></table></figure></li>
<li><p>拉取 Helm 安裝包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">helm pull prometheus-community/kube-prometheus-stack</span><br></pre></td></tr></table></figure></li>
<li><p>解壓縮</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -xvf kube-prometheus-stack-23.1.1.tgz</span><br></pre></td></tr></table></figure></li>
<li><p>自定義參數於 values.yaml 中進行修改</p>
<ul>
<li><p>修改 admin 預設密碼</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#admin 預設密碼</span></span><br><span class="line"><span class="attr">adminPassword:</span> </span><br></pre></td></tr></table></figure></li>
<li><p>修改時區</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">## Timezone for the default dashboards</span></span><br><span class="line"><span class="comment">## Other options are: browser or a specific timezone, i.e. Europe/Luxembourg</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">defaultDashboardsTimezone:</span> <span class="string">utc</span></span><br></pre></td></tr></table></figure></li>
<li><p>增加持久化儲存</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">## Prometheus StorageSpec for persistent data</span></span><br><span class="line"><span class="comment">## ref: https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/user-guides/storage.md</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">storageSpec:</span> </span><br><span class="line"> <span class="attr">volumeClaimTemplate:</span></span><br><span class="line">   <span class="attr">spec:</span></span><br><span class="line">   	<span class="comment">#持久化儲存 ClassName 這邊使用前面建立的 local-path</span></span><br><span class="line">     <span class="attr">storageClassName:</span> <span class="string">local-path</span></span><br><span class="line">     <span class="attr">accessModes:</span> [<span class="string">&quot;ReadWriteOnce&quot;</span>]</span><br><span class="line">     <span class="attr">resources:</span></span><br><span class="line">       <span class="attr">requests:</span></span><br><span class="line">       	<span class="comment">#分配大小</span></span><br><span class="line">         <span class="attr">storage:</span> <span class="string">5Gi</span></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>安裝</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#使用 helm 安裝至準備好的 namespace 中</span></span><br><span class="line">helm install  homelab-monitoring . -n monitoring</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="kubernetes-Ingerss-建立"><a href="#kubernetes-Ingerss-建立" class="headerlink" title="kubernetes Ingerss 建立"></a>kubernetes Ingerss 建立</h3><ul>
<li><p>安裝 traefik 作為 kubernetes Ingerss</p>
<ul>
<li><p>Helm 添加 traefik helm 倉庫</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">helm repo  add  traefik https://helm.traefik.io/traefik </span><br><span class="line">helm repo  update </span><br></pre></td></tr></table></figure></li>
<li><p>下載 traefik </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">helm pull traefik/traefik</span><br></pre></td></tr></table></figure></li>
<li><p>部屬 traefik </p>
<ul>
<li><p>使用自定義參數替換預設參數</p>
<ul>
<li><p>創建 namespace 用於安裝 traefik</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl create namespace traefik-ingress</span><br></pre></td></tr></table></figure></li>
<li><p>建立文件 my-value.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">service:</span> </span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span>  </span><br><span class="line"><span class="attr">ingressRoute:</span> </span><br><span class="line">  <span class="attr">dashboard:</span> </span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">false</span> </span><br><span class="line"><span class="attr">ports:</span> </span><br><span class="line">  <span class="attr">traefik:</span> </span><br><span class="line">    <span class="attr">port:</span> <span class="number">9000</span> </span><br><span class="line">    <span class="attr">expose:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">nodePort:</span> <span class="number">31000</span> </span><br><span class="line">  <span class="attr">web:</span> </span><br><span class="line">    <span class="attr">port:</span> <span class="number">8000</span> </span><br><span class="line">    <span class="attr">expose:</span> <span class="literal">true</span> </span><br><span class="line">    <span class="attr">hostPort:</span> <span class="number">80</span> </span><br><span class="line">    <span class="comment"># 強制轉 HTTPS , 這邊使用 cloudflare 強制 https 所以進行註解</span></span><br><span class="line">    <span class="comment"># redirectTo: websecure</span></span><br><span class="line">  <span class="attr">websecure:</span> </span><br><span class="line">    <span class="attr">port:</span> <span class="number">8443</span> </span><br><span class="line">    <span class="attr">expose:</span> <span class="literal">true</span> </span><br><span class="line">    <span class="attr">hostPort:</span> <span class="number">443</span></span><br><span class="line">  <span class="attr">redis:</span> </span><br><span class="line">  	<span class="comment"># TCP 端口轉接</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">6379</span> </span><br><span class="line">    <span class="attr">containerPort:</span> <span class="number">6379</span> </span><br><span class="line">    <span class="attr">hostPort:</span> <span class="number">6379</span></span><br><span class="line"><span class="comment"># 永久卷設置    </span></span><br><span class="line"><span class="attr">persistence:</span> </span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span> </span><br><span class="line">  <span class="attr">name:</span> <span class="string">data</span> </span><br><span class="line">  <span class="attr">accessMode:</span> <span class="string">ReadWriteOnce</span> </span><br><span class="line">  <span class="attr">size:</span> <span class="string">5G</span> </span><br><span class="line">  <span class="attr">storageClass:</span> <span class="string">&quot;local-path&quot;</span> </span><br><span class="line">  <span class="attr">path:</span> <span class="string">/data</span></span><br><span class="line"><span class="comment"># 額外參數設定</span></span><br><span class="line"><span class="attr">additionalArguments:</span> </span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;--entryPoints.redis.address=:6379&quot;</span> </span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;--serversTransport.insecureSkipVerify=true&quot;</span> </span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;--api.insecure=true&quot;</span> </span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;--api.dashboard=true&quot;</span></span><br><span class="line">  <span class="comment"># 使用插件獲取真實IP , 若不使用通過 cloudflare 僅會獲取 cloudflare 所給予之 IP</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;--experimental.plugins.traefik-real-ip.modulename=github.com/soulbalz/traefik-real-ip&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;--experimental.plugins.traefik-real-ip.version=v1.0.3&quot;</span></span><br><span class="line"><span class="comment"># 插件參數設定  </span></span><br><span class="line"><span class="attr">pilot:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 使用 pilot 插件需登入獲取 token</span></span><br><span class="line">  <span class="attr">token:</span> </span><br><span class="line">  <span class="attr">dashboard:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">experimental:</span></span><br><span class="line">  <span class="attr">plugins:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span>  </span><br></pre></td></tr></table></figure></li>
<li><p>部屬 traefik 並套用 my-value.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">helm</span> <span class="string">install</span> <span class="string">traefik</span> <span class="string">-n</span> <span class="string">traefik-ingress</span> <span class="string">-f</span> <span class="string">my-value.yaml</span> <span class="string">.</span></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>kubernetes</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>iPerf3  網路速度測試工具</title>
    <url>/2021/12/15/iPerf3-%E7%B6%B2%E8%B7%AF%E9%80%9F%E5%BA%A6%E6%B8%AC%E8%A9%A6%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<h2 id="iPerf3-網路速度測試工具"><a href="#iPerf3-網路速度測試工具" class="headerlink" title="iPerf3  網路速度測試工具"></a>iPerf3  網路速度測試工具</h2><h4 id="支援平台"><a href="#支援平台" class="headerlink" title="支援平台"></a>支援平台</h4><ul>
<li><p>Windows、Mac OS X、Linux、FreeBSD</p>
<span id="more"></span>
<h4 id="支援傳輸協定"><a href="#支援傳輸協定" class="headerlink" title="支援傳輸協定"></a>支援傳輸協定</h4></li>
<li><p>TCP、UDP、SCTP </p>
</li>
</ul>
<h4 id="支援網路位址"><a href="#支援網路位址" class="headerlink" title="支援網路位址"></a>支援網路位址</h4><ul>
<li>IPv4、IPv6 </li>
</ul>
<h4 id="Win10安裝方法"><a href="#Win10安裝方法" class="headerlink" title="Win10安裝方法"></a>Win10安裝方法</h4><ul>
<li><a href="https://iperf.fr/iperf-download.php">官方網站下載安裝</a></li>
</ul>
<h4 id="Debian-Ubuntu-Linux-安裝方式"><a href="#Debian-Ubuntu-Linux-安裝方式" class="headerlink" title="Debian/Ubuntu Linux 安裝方式"></a>Debian/Ubuntu Linux 安裝方式</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install iperf3</span><br></pre></td></tr></table></figure>

<h4 id="測試網路頻寬"><a href="#測試網路頻寬" class="headerlink" title="測試網路頻寬"></a>測試網路頻寬</h4><ul>
<li><p>一般在使用 iPerf3 測試時，要同時在 server 端與 client 端都各執行一個 iPerf3 程式，讓它們互相傳送資料進行測試，首先啟動 server 端的 <code>iperf3</code>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Server 端</span></span><br><span class="line">iperf3 -s</span><br></pre></td></tr></table></figure></li>
<li><p>client 端執行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Client 端</span></span><br><span class="line">iperf3 -c SERVER_IP</span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="iPerf3-進階指令"><a href="#iPerf3-進階指令" class="headerlink" title="iPerf3 進階指令"></a>iPerf3 進階指令</h4><ul>
<li><h3 id="測試時間"><a href="#測試時間" class="headerlink" title="測試時間"></a>測試時間</h3><ul>
<li><p><code>-t</code> 參數可以指定傳輸測試的持續時間，而 <code>-i</code> 可以指定輸出數據的間隔時間：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 測試 20 秒，每隔 4 秒輸出測試數據</span></span><br><span class="line">iperf3 -c SERVER_IP -t 20 -i 4</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><h3 id="儲存測試結果"><a href="#儲存測試結果" class="headerlink" title="儲存測試結果"></a>儲存測試結果</h3><ul>
<li><p><code>--logfile</code> 參數可以將輸出的測試結果報表或是錯誤訊息儲存至檔案中：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 將輸出訊息儲存至 output.txt 檔案中</span></span><br><span class="line">iperf3 -c SERVER_IP --logfile output.txt</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><h3 id="指定連接埠"><a href="#指定連接埠" class="headerlink" title="指定連接埠"></a>指定連接埠</h3><ul>
<li><p>iPerf3 預設會使用的連接埠（port）是 <code>5201</code>，若要自行指定連接埠，可以使用 <code>-p</code> 參數：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用 12345 這個連接埠的 server</span></span><br><span class="line">iperf3 -s -p 12345</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 12345 這個連接埠的 client</span></span><br><span class="line">iperf3 -c SERVER_IP -p 12345</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><h3 id="JSON-格式輸出"><a href="#JSON-格式輸出" class="headerlink" title="JSON 格式輸出"></a>JSON 格式輸出</h3><ul>
<li><p>若要使用程式讀取 iPerf3 的測試結果，可將輸出格式改為 JSON 會更方便。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用 JSON 格式輸出</span></span><br><span class="line">iperf3 -c SERVER_IP -J</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><h3 id="多線連接"><a href="#多線連接" class="headerlink" title="多線連接"></a>多線連接</h3><ul>
<li><p><code>-P</code> 參數可以指定同時使用幾條連線進行測試：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 同時使用 2 條連線測試</span></span><br><span class="line">iperf3 -c SERVER_IP -P 2</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><h3 id="UDP-傳輸協定"><a href="#UDP-傳輸協定" class="headerlink" title="UDP 傳輸協定"></a>UDP 傳輸協定</h3><ul>
<li><p>若要測試 UDP 傳輸協定的效能，可以使用 <code>-u</code> 參數：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用 UDP 傳輸協定</span></span><br><span class="line">iperf3 -c SERVER_IP -u</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><h3 id="反向傳輸-上傳"><a href="#反向傳輸-上傳" class="headerlink" title="反向傳輸(上傳)"></a>反向傳輸(上傳)</h3><ul>
<li><p>iPerf3 預設會測試上傳的速度（由 client 傳送資料，而 server 負責接收）若要測試下載的速度（由 server 傳送資料，而 client 負責接收），則可以使用 <code>-R</code> 參數：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 測試反向傳輸（下載）</span></span><br><span class="line">iperf3 -c SERVER_IP -R</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><h3 id="IPv4-與-IPv6"><a href="#IPv4-與-IPv6" class="headerlink" title="IPv4 與 IPv6"></a>IPv4 與 IPv6</h3><ul>
<li><p><code>-4</code> 與 <code>-6</code> 可以指定只使用 IPv4 或 IPv6：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 只使用 IPv4</span></span><br><span class="line">iperf3 -c SERVER_IP -4</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只使用 IPv6</span></span><br><span class="line">iperf3 -c SERVER_IP -6</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><h3 id="自訂傳送檔案"><a href="#自訂傳送檔案" class="headerlink" title="自訂傳送檔案"></a>自訂傳送檔案</h3><ul>
<li><p>我們可以使用 <code>-f</code> 自訂用來測試傳送的檔案：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用 YOUR_FILE 這個檔案來測試傳送速度</span></span><br><span class="line">iperf3 -c SERVER_IP -F YOUR_FILE</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>iperf3</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu 18.04 安裝 KVM</title>
    <url>/2021/12/17/ubuntu-18-04-%E5%AE%89%E8%A3%9D-KVM/</url>
    <content><![CDATA[<h2 id="ubuntu-18-04-安裝-KVM"><a href="#ubuntu-18-04-安裝-KVM" class="headerlink" title="ubuntu 18.04 安裝 KVM"></a>ubuntu 18.04 安裝 KVM</h2><span id="more"></span>
<h3 id="檢查CPU是否支援虛擬化技術"><a href="#檢查CPU是否支援虛擬化技術" class="headerlink" title="檢查CPU是否支援虛擬化技術"></a>檢查CPU是否支援虛擬化技術</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">egrep -c <span class="string">&#x27;(svm|vmx)&#x27;</span> /proc/cpuinfo</span><br></pre></td></tr></table></figure>

<ul>
<li>若輸出為 0 則為不支援虛擬化技術,請檢查CPU是否支援虛擬化以及主機板BIOS是否開啟相關設定</li>
</ul>
<h3 id="安裝KVM"><a href="#安裝KVM" class="headerlink" title="安裝KVM"></a>安裝KVM</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install qemu-kvm libvirt-bin bridge-utils virt-manager</span><br></pre></td></tr></table></figure>

<h3 id="啟動-KVM管理介面"><a href="#啟動-KVM管理介面" class="headerlink" title="啟動 KVM管理介面"></a>啟動 KVM管理介面</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo virt-manager</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>kvm</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Harbor架設Registry</title>
    <url>/2021/12/31/%E4%BD%BF%E7%94%A8Harbor%E6%9E%B6%E8%A8%ADRegistry/</url>
    <content><![CDATA[<h2 id="使用Harbor架設Registry"><a href="#使用Harbor架設Registry" class="headerlink" title="使用Harbor架設Registry"></a>使用Harbor架設Registry</h2><blockquote>
<p>Harbor 是開源的 Container Registry 專案 , 可提供權限控管並用來同時維護 Container Image 以及 Helm Charts .</p>
</blockquote>
<span id="more"></span>

<h3 id="安裝環境"><a href="#安裝環境" class="headerlink" title="安裝環境"></a>安裝環境</h3><ul>
<li>Kubernetes</li>
<li>Helm 3 </li>
<li>Traefik Ingress</li>
</ul>
<h3 id="安裝-Harbor"><a href="#安裝-Harbor" class="headerlink" title="安裝 Harbor"></a>安裝 Harbor</h3><ul>
<li><p>加入倉庫</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">helm repo add bitnami https://charts.bitnami.com/bitnami</span><br></pre></td></tr></table></figure></li>
<li><p>下載 Harbor</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">helm pull bitnami/harbor</span><br></pre></td></tr></table></figure></li>
<li><p>修改 values.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#指定 storageClass  </span></span><br><span class="line"><span class="attr">global:</span></span><br><span class="line">  <span class="attr">imageRegistry:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">imagePullSecrets:</span> []</span><br><span class="line">  <span class="attr">storageClass:</span> <span class="string">&quot;&lt;your storageClass&gt;&quot;</span></span><br><span class="line"><span class="comment"># 指定 externalURL</span></span><br><span class="line"><span class="attr">externalURL:</span> <span class="string">https://&lt;your</span> <span class="string">domain&gt;</span></span><br><span class="line"><span class="comment"># 指定 service type 為 ClusterIP 以及 Harbor 的 domain</span></span><br><span class="line"><span class="attr">service:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">existingSecret:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">notaryExistingSecret:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">commonName:</span> <span class="string">&#x27;&lt;your domain&gt;&#x27;</span></span><br><span class="line"><span class="comment">#---------------------------------------------------    </span></span><br><span class="line"><span class="comment"># 若要使用自己的 postgresql 則設定</span></span><br><span class="line"><span class="attr">postgresql:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment"># 並設定以下參數</span></span><br><span class="line"><span class="attr">externalDatabase:</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">localhost</span></span><br><span class="line">  <span class="attr">user:</span> <span class="string">bn_harbor</span></span><br><span class="line">  <span class="attr">password:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">5432</span></span><br><span class="line">  <span class="attr">sslmode:</span> <span class="string">disable</span></span><br><span class="line">  <span class="attr">coreDatabase:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">clairDatabase:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">clairUsername:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">clairPassword:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">notaryServerDatabase:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">notaryServerUsername:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">notaryServerPassword:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">notarySignerDatabase:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">notarySignerUsername:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">notarySignerPassword:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="comment"># 若要使用自己的 redis 則設定</span></span><br><span class="line"><span class="attr">redis:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment"># 並設定以下參數  </span></span><br><span class="line"><span class="attr">externalRedis:</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">localhost</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">6379</span></span><br><span class="line">  <span class="attr">sentinel:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">masterSet:</span> <span class="string">&#x27;mymaster&#x27;</span></span><br><span class="line">    <span class="attr">hosts:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">password:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">coreDatabaseIndex:</span> <span class="string">&#x27;0&#x27;</span></span><br><span class="line">  <span class="attr">jobserviceDatabaseIndex:</span> <span class="string">&#x27;1&#x27;</span></span><br><span class="line">  <span class="attr">registryDatabaseIndex:</span> <span class="string">&#x27;2&#x27;</span></span><br><span class="line">  <span class="attr">chartmuseumDatabaseIndex:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line">  <span class="attr">clairAdapterDatabaseIndex:</span> <span class="string">&#x27;4&#x27;</span></span><br><span class="line">  <span class="attr">trivyAdapterDatabaseIndex:</span> <span class="string">&#x27;5&#x27;</span>  </span><br></pre></td></tr></table></figure></li>
<li><p>安裝 Harbor 至 Traefik Ingress 相同 Namespace 底下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">helm install  harbor .  -n &lt;Your Traefik Ingress Namespace&gt;</span><br></pre></td></tr></table></figure></li>
<li><p>取得 admin password 用於登入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 預設使用者帳號 admin 並亂數產生密碼</span></span><br><span class="line"><span class="built_in">echo</span> $(kubectl get secret --namespace &lt;Your Traefik Ingress Namespace&gt; harbor-core-envvars -o jsonpath=<span class="string">&quot;&#123;.data.HARBOR_ADMIN_PASSWORD&#125;&quot;</span> | base64 --decode)</span><br><span class="line"><span class="comment"># 若要自訂義密碼請修改 values.yaml 中的 harborAdminPassword: &quot;&quot;</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="設定-Traefik-Ingress"><a href="#設定-Traefik-Ingress" class="headerlink" title="設定 Traefik Ingress"></a>設定 Traefik Ingress</h3><ul>
<li><p>建立檔案 harbor-ingress.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">traefik.containo.us/v1alpha1</span> </span><br><span class="line"><span class="attr">kind:</span> <span class="string">IngressRoute</span> </span><br><span class="line"><span class="attr">metadata:</span> </span><br><span class="line">  <span class="attr">name:</span> <span class="string">harbor-route</span> </span><br><span class="line"><span class="attr">spec:</span> </span><br><span class="line">  <span class="attr">entryPoints:</span> </span><br><span class="line">  <span class="bullet">-</span> <span class="string">websecure</span></span><br><span class="line">  <span class="attr">routes:</span> </span><br><span class="line">  <span class="bullet">-</span> <span class="attr">match:</span> <span class="string">Host(`&lt;your</span> <span class="string">domain&gt;`)</span></span><br><span class="line">  	<span class="comment"># middlewares 設定 IP 白名單 , 若不須設定可自行修改</span></span><br><span class="line">    <span class="attr">middlewares:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">traefik-real-ip</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">ipwhitelist</span></span><br><span class="line">    <span class="attr">kind:</span> <span class="string">Rule</span> </span><br><span class="line">    <span class="attr">services:</span> </span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">harbor</span> </span><br><span class="line">        <span class="attr">port:</span> <span class="number">443</span></span><br><span class="line">  <span class="attr">tls:</span> </span><br><span class="line">    <span class="attr">secretName:</span> <span class="string">&lt;your</span> <span class="string">tls&gt;</span></span><br></pre></td></tr></table></figure></li>
<li><p>應用 harbor-ingress.yaml</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl apply -f .\harbor-ingress.yaml -n traefik-ingress</span><br></pre></td></tr></table></figure></li>
<li><p>若有需求可將此段整合進 Chart 使用 Helm 統一部署</p>
</li>
</ul>
<h3 id="推送-Docker-Image-至-Harbor"><a href="#推送-Docker-Image-至-Harbor" class="headerlink" title="推送 Docker Image 至 Harbor"></a>推送 Docker Image 至 Harbor</h3><ul>
<li><p>登入 Registry</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker login &lt;your registry domain&gt;</span><br></pre></td></tr></table></figure></li>
<li><p>標記要推送的鏡像</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 初始安裝後有預設項目 library ,可自行新增項目並修改</span></span><br><span class="line">docker tag SOURCE_IMAGE[:TAG] &lt;your registry domain&gt;/library/REPOSITORY[:TAG]</span><br></pre></td></tr></table></figure></li>
<li><p>推送鏡像</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker push &lt;your registry domain&gt;/library/REPOSITORY[:TAG]</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="推送-Chart-至-Harbor"><a href="#推送-Chart-至-Harbor" class="headerlink" title="推送 Chart 至 Harbor"></a>推送 Chart 至 Harbor</h3><ul>
<li><p>標記要推送的 Chart</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">helm chart save CHART_PATH &lt;your registry domain&gt;/library/REPOSITORY[:TAG]</span><br></pre></td></tr></table></figure></li>
<li><p>推送 Chart</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">helm chart push &lt;your registry domain&gt;/library/REPOSITORY[:TAG]</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="Kubernetes-整合"><a href="#Kubernetes-整合" class="headerlink" title="Kubernetes 整合"></a>Kubernetes 整合</h3><ul>
<li><p>在集群中創建保存授權令牌的Secret</p>
<blockquote>
<p>Kubernetes 集群使用 <code>docker-registry</code> 類型的 Secret 來通過容器倉庫的身份驗證,進而提取私有映像.</p>
</blockquote>
</li>
<li><p>創建 Secret ,命名為<code>regcred</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl create secret docker-registry regcred \</span><br><span class="line">  --docker-server=&lt;your registry domain&gt; \</span><br><span class="line">  --docker-username=&lt;your username&gt; \</span><br><span class="line">  --docker-password=&lt;your password&gt; \</span><br><span class="line">  --docker-email=&lt;your email&gt;</span><br></pre></td></tr></table></figure></li>
<li><p>檢查Secret <code>regcred</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl get secret regcred --output=yaml</span><br></pre></td></tr></table></figure></li>
<li><p>創建一個使用你的 Secret 的 Pod</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">private-reg</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">private-reg-container</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">&lt;your-private-image&gt;</span></span><br><span class="line">  <span class="comment"># 透過 regcred 像私有倉庫驗證登入並進行拉取鏡像檔案</span></span><br><span class="line">  <span class="attr">imagePullSecrets:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">regcred</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="Harbor-的鏡像安全性掃描"><a href="#Harbor-的鏡像安全性掃描" class="headerlink" title="Harbor 的鏡像安全性掃描"></a>Harbor 的鏡像安全性掃描</h3><blockquote>
<p>Harbor 預設使用 Trivy 作為鏡像安全掃描工具 ,Trivy 部署設定可修改 Harbor Chart 的 values.yaml.</p>
</blockquote>
]]></content>
      <categories>
        <category>kubernetes</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
        <tag>Harbor</tag>
        <tag>Registry</tag>
      </tags>
  </entry>
  <entry>
    <title>資源指標 metrics-server</title>
    <url>/2022/01/11/%E8%B3%87%E6%BA%90%E6%8C%87%E6%A8%99-metrics-server/</url>
    <content><![CDATA[<h2 id="Metrics-Server"><a href="#Metrics-Server" class="headerlink" title="Metrics Server"></a>Metrics Server</h2><blockquote>
<p>Metrics Server 從 Kubelets 收集資源指標，並通過Metrics API在 Kubernetes apiserver 中公開它們， 以供Horizontal Pod Autoscaler和Vertical Pod Autoscaler 使用。<span id="more"></span></p>
</blockquote>
<h2 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h2><ul>
<li>從 yaml 安裝</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml</span><br></pre></td></tr></table></figure>

<ul>
<li>從 Helm 安裝</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 加入倉庫 </span></span><br><span class="line">helm repo add metrics-server https://kubernetes-sigs.github.io/metrics-server/</span><br><span class="line"><span class="comment"># 安裝</span></span><br><span class="line">helm upgrade --install metrics-server metrics-server/metrics-server</span><br></pre></td></tr></table></figure>

<h2 id="檢查指標API可用性"><a href="#檢查指標API可用性" class="headerlink" title="檢查指標API可用性"></a>檢查指標API可用性</h2><blockquote>
<p>kubectl get –raw 可以返回cluster中所有節點的資源使用狀況列表</p>
</blockquote>
<ul>
<li><p>檢查 Node</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl get --raw <span class="string">&quot;/apis/metrics.k8s.io/v1beta1/nodes&quot;</span> | jq</span><br></pre></td></tr></table></figure></li>
<li><p>檢查 Pod</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl get --raw <span class="string">&quot;/apis/metrics.k8s.io/v1beta1/pods&quot;</span> | jq</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="顯示資源使用訊息"><a href="#顯示資源使用訊息" class="headerlink" title="顯示資源使用訊息"></a>顯示資源使用訊息</h2><blockquote>
<p>kubectl top 可以查看 Node 和 Pod 的資源使用訊息, 包含node和pod兩個子命令, 可以顯示相關的資源佔用率</p>
</blockquote>
<ul>
<li><p>查看 Node</p>
<ul>
<li><p>查看所有 Node</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl top node</span><br></pre></td></tr></table></figure></li>
<li><p>查看單一 Node 資源使用訊息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl top node &lt; Node Name&gt;</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>查看 Pod</p>
<ul>
<li><p>查看 Namespace 下所有 Pod</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 若不指定 namespace 則會顯示預設 (default) namespace 底下的 Pod資訊</span></span><br><span class="line">kubectl top pod -n &lt; Namespace&gt;</span><br></pre></td></tr></table></figure></li>
<li><p>查看單一 Pod 資源使用訊息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl top pod  &lt; Pod Name &gt;  -n &lt; Namespace &gt;</span><br></pre></td></tr></table></figure></li>
<li><p>查看 Pod 中 containers 資源使用訊息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl top pod  &lt; Pod Name &gt; -n &lt; Namespace &gt;  --containers</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<h2 id="佈署錯誤及解決方法"><a href="#佈署錯誤及解決方法" class="headerlink" title="佈署錯誤及解決方法"></a>佈署錯誤及解決方法</h2><ul>
<li><p>no metrics known for pod</p>
<ul>
<li><p>原因</p>
<ul>
<li>metrics-server 預設會使用 Hostname 來進行通訊 , 如果沒有相應設定的話是無法進行通訊的 .</li>
</ul>
</li>
<li><p>解決方法</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 加入 InternalIP 使 metrics-server 能透過 IP 進行通訊</span></span><br><span class="line"><span class="comment"># 新版本官方佈署文件中已修改為 InternalIP,ExternalIP,Hostname ,若直接佈署新版較不會產生此問題</span></span><br><span class="line"><span class="attr">args:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;--kubelet-preferred-address-types=InternalIP&#x27;</span></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>x509: cannot validate certificate</p>
<ul>
<li><p>原因</p>
<ul>
<li>證書驗證錯誤</li>
</ul>
</li>
<li><p>解決方法</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使 metrics-server 忽略證書錯誤</span></span><br><span class="line"><span class="attr">args:</span> </span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;--kubelet-insecure-tls&#x27;</span></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>kubernetes</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
        <tag>metrics </tag>
      </tags>
  </entry>
</search>
